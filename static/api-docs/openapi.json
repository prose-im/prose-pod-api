{
	"openapi": "3.0.3",
	"info": {
		"title": "prose-pod-api",
		"description": "Prose Pod API server.",
		"contact": {
			"name": "Valerian Saliou",
			"email": "valerian@valeriansaliou.name"
		},
		"license": {
			"name": "MPL-2.0"
		},
		"version": "0.2.0"
	},
	"paths": {
		"/v1/init/first-account": {
			"put": {
				"tags": ["Init"],
				"summary": "Initialize the the first XMPP account",
				"description": "Initializes the first XMPP account on the server. It will be given the `ADMIN` role and this user will have to log in before making subsequent requests (like inviting other users). After one account is created, this unauthenticated route will always return `409 Conflict` to prevent unauthenticated users from creating admin accounts.",
				"operationId": "init_first_account",
				"security": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InitFirstAccountRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Member" }
							}
						},
						"headers": {
							"Location": { "$ref": "#/components/headers/Location" }
						}
					},
					"400": {
						"$ref": "#/components/responses/ServerConfigNotInitialized"
					},
					"409": { "$ref": "#/components/responses/FirstAccountAlreadyCreated" }
				}
			}
		},
		"/v1/login": {
			"post": {
				"tags": ["Misc"],
				"summary": "Log in",
				"description": "Logs a user in and returns an authentication token (using the JWT format).",
				"operationId": "login",
				"security": [{ "BasicAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/LoginResponse" }
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" }
				}
			}
		},
		"/v1/invitations": {
			"get": {
				"tags": ["Invitations"],
				"summary": "Get all invitations",
				"description": "Get all workspace invitations in a paginated manner.",
				"operationId": "get_invitations",
				"security": [{ "BearerAuth": [] }],
				"parameters": [
					{ "$ref": "#/components/parameters/PageNumber" },
					{ "$ref": "#/components/parameters/PageSize" },
					{ "$ref": "#/components/parameters/Until" }
				],
				"responses": {
					"200": {
						"description": "End of results",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/WorkspaceInvitation"
									}
								}
							}
						},
						"headers": {
							"Pagination-Current-Page": {
								"$ref": "#/components/headers/PaginationCurrentPage"
							},
							"Pagination-Page-Size": {
								"$ref": "#/components/headers/PaginationPageSize"
							},
							"Pagination-Page-Count": {
								"$ref": "#/components/headers/PaginationPageCount"
							},
							"Pagination-Item-Count": {
								"$ref": "#/components/headers/PaginationItemCount"
							}
						}
					},
					"206": {
						"description": "Partial results",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/WorkspaceInvitation"
									}
								}
							}
						},
						"headers": {
							"Pagination-Current-Page": {
								"$ref": "#/components/headers/PaginationCurrentPage"
							},
							"Pagination-Page-Size": {
								"$ref": "#/components/headers/PaginationPageSize"
							},
							"Pagination-Page-Count": {
								"$ref": "#/components/headers/PaginationPageCount"
							},
							"Pagination-Item-Count": {
								"$ref": "#/components/headers/PaginationItemCount"
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			},
			"post": {
				"tags": ["Invitations"],
				"summary": "Invite a member",
				"description": "Invite a new member to the workspace.\n\nThe person will receive a notification with a link to join the workspace and create their account.",
				"operationId": "invite_member",
				"security": [{ "BearerAuth": [] }],
				"requestBody": {
					"description": "Information about who to invite.",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/InviteMemberRequest" }
						}
					}
				},
				"responses": {
					"201": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/WorkspaceInvitation" }
							}
						},
						"headers": {
							"Location": { "$ref": "#/components/headers/Location" }
						}
					},
					"400": {
						"$ref": "#/components/responses/ServerConfigNotInitialized"
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/invitations/{invitationIdOrToken}": {
			"get": {
				"tags": ["Invitations"],
				"summary": "Get an invitation",
				"description": "Get information about a workspace invitation.\n\nIf an accept or reject token is used in the path and `token_type` is provided as a query parameter, will search for an invitation with the given token. This route can be used by the Prose Pod Dashboard to display some information about the invitation when someone opens an invitation link (like their predefined JID or role).",
				"operationId": "get_invitation",
				"security": [{ "BearerAuth": [] }],
				"parameters": [
					{ "$ref": "#/components/parameters/InvitationIdOrToken" },
					{
						"description": "Type of invitation token",
						"in": "query",
						"name": "token_type",
						"schema": { "$ref": "#/components/schemas/InvitationTokenType" },
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/WorkspaceInvitation" }
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/ServerConfigNotInitialized"
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/invitations/{invitationId}": {
			"delete": {
				"tags": ["Invitations"],
				"summary": "Cancel an invitation",
				"description": "Cancel a workspace invitation.",
				"operationId": "invitation_cancel",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/InvitationId" }],
				"responses": {
					"204": { "$ref": "#/components/responses/NoContent" },
					"400": {
						"$ref": "#/components/responses/ServerConfigNotInitialized"
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/invitations/{token}/accept": {
			"put": {
				"tags": ["Invitations"],
				"summary": "Accept an invitation",
				"description": "Accept a workspace invitation.",
				"operationId": "invitation_accept",
				"security": [],
				"parameters": [
					{ "$ref": "#/components/parameters/InvitationAcceptToken" }
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AcceptWorkspaceInvitationRequest"
							}
						}
					}
				},
				"responses": {
					"204": { "$ref": "#/components/responses/NoContent" },
					"400": {
						"$ref": "#/components/responses/ServerConfigNotInitialized"
					},
					"410": { "$ref": "#/components/responses/Gone" }
				}
			}
		},
		"/v1/invitations/{token}/reject": {
			"put": {
				"tags": ["Invitations"],
				"summary": "Reject an invitation",
				"description": "Reject a workspace invitation.",
				"operationId": "invitation_reject",
				"security": [],
				"parameters": [{ "$ref": "#/components/parameters/InvitationId" }],
				"responses": {
					"204": { "$ref": "#/components/responses/NoContent" },
					"400": {
						"$ref": "#/components/responses/ServerConfigNotInitialized"
					},
					"410": { "$ref": "#/components/responses/Gone" }
				}
			}
		},
		"/v1/invitations/{invitationId}/resend": {
			"post": {
				"tags": ["Invitations"],
				"summary": "Resend an invitation",
				"description": "Resend a workspace invitation.",
				"operationId": "invitation_resend",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/InvitationId" }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/WorkspaceInvitation" }
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/ServerConfigNotInitialized"
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/members": {
			"get": {
				"tags": ["Members"],
				"summary": "Get all members",
				"description": "Get all members in a paginated manner.",
				"operationId": "get_members",
				"security": [{ "BearerAuth": [] }],
				"parameters": [
					{ "$ref": "#/components/parameters/PageNumber" },
					{ "$ref": "#/components/parameters/PageSize" },
					{ "$ref": "#/components/parameters/Until" }
				],
				"responses": {
					"200": {
						"description": "End of results",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/Member" }
								}
							}
						},
						"headers": {
							"Pagination-Current-Page": {
								"$ref": "#/components/headers/PaginationCurrentPage"
							},
							"Pagination-Page-Size": {
								"$ref": "#/components/headers/PaginationPageSize"
							},
							"Pagination-Page-Count": {
								"$ref": "#/components/headers/PaginationPageCount"
							},
							"Pagination-Item-Count": {
								"$ref": "#/components/headers/PaginationItemCount"
							}
						}
					},
					"206": {
						"description": "Partial results",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/Member" }
								}
							}
						},
						"headers": {
							"Pagination-Current-Page": {
								"$ref": "#/components/headers/PaginationCurrentPage"
							},
							"Pagination-Page-Size": {
								"$ref": "#/components/headers/PaginationPageSize"
							},
							"Pagination-Page-Count": {
								"$ref": "#/components/headers/PaginationPageCount"
							},
							"Pagination-Item-Count": {
								"$ref": "#/components/headers/PaginationItemCount"
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/members/{memberId}": {
			"get": {
				"tags": ["Members"],
				"summary": "Get a member",
				"description": "Get information about one member.",
				"operationId": "get_member",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/MemberId" }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Member" }
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" },
					"404": { "$ref": "#/components/responses/NotFound" }
				}
			}
		},
		"/v1/members/{memberId}/mfa": {
			"put": {
				"tags": ["Members"],
				"summary": "Set member MFA status",
				"description": "Change a member's Multi-Factor Authentication (MFA) status.",
				"operationId": "set_member_mfa",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/MemberId" }],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/SetMemberMfaRequest" }
						}
					}
				},
				"responses": {
					"204": { "$ref": "#/components/responses/NoContent" },
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/members/{memberId}/role": {
			"put": {
				"tags": ["Members"],
				"summary": "Set member role",
				"description": "Change a member's role.",
				"operationId": "set_member_role",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/MemberId" }],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/SetMemberRoleRequest" }
						}
					}
				},
				"responses": {
					"204": { "$ref": "#/components/responses/NoContent" },
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/enrich-members": {
			"get": {
				"tags": ["Members"],
				"summary": "Enrich members",
				"description": "When listing members, Prose Pod API only returns the data stored in its database (e.g. user JID, role…). To get more information like a user's display name and avatar, Prose Pod API needs to query the XMPP server. This route can be used to get more information about given JIDs in a single batch or as Server-Sent Events. By default, Prose Pod API will return results in a batch (as JSON) for straightforward processing.\n\nWhen requesting Server-Sent Events, the server will send one `enriched-member` event per JID to enrich, then one `end` event and close the stream. All enriched data fields are optional; if an error occurs (e.g. unknown JID), the server won't return an error but rather a regular `enriched-member` event with all fields being `null` except `jid`.\nNOTE: There might be a `(\\n|^):(\\n|$)` lurking in one of the events. We don't know where it comes from and it should be ignored by SSE parsers but don't be suprised to see it.",
				"operationId": "enrich_members",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"additionalProperties": {
										"$ref": "#/components/schemas/EnrichedMember"
									},
									"example": {
										"maximilian_macgyver52@flustered-ship.info": {
											"jid": "maximilian_macgyver52@flustered-ship.info",
											"nickname": "Max MacGyver",
											"avatar": "/9j/4AAQSkZJRgABAgEASABIAAD/4QDKRXhpZgAATU0AKgAAAAgABgESAAMAAAABAAEAAAEaAAUAAAABAAAAVgEbAAUAAAABAAAAXgEoAAMAAAABAAIAAAITAAMAAAABAAEAAIdpAAQAAAABAAAAZgAAAAAAAABIAAAAAQAAAEgAAAABAAeQAAAHAAAABDAyMjGRAQAHAAAABAECAwCgAAAHAAAABDAxMDCgAQADAAAAAQABAACgAgAEAAAAAQAAAECgAwAEAAAAAQAAAECkBgADAAAAAQAAAAAAAAAAAAD/wAARCABAAEADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9sAQwABAQEBAQECAQECAwICAgMEAwMDAwQFBAQEBAQFBgUFBQUFBQYGBgYGBgYGBwcHBwcHCAgICAgJCQkJCQkJCQkJ/9sAQwEBAQECAgIEAgIECQYFBgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJ/90ABAAE/9oADAMBAAIRAxEAPwD+5ivNPij8XPA3wf0D/hIPG135KvlYIIxvnncfwxJ39ycKvcitX4heOdK+HfhW58T6t8yxYWOMHBllbhEB7ZPU9gCa/HT4ha1e/EjxTceI/G8qT3Eo2bVLMsceflWIdFRfTv1PNe1lWUPEXnN2ivxBSV7M7X4n/t3fELxLBPaeBQPDcROI2VVmuWX1aRgUU47KvHrX5HftLf8ABTDT/gx4hTwx461jXtT1VkikkVmuDGwkIzskDiP5BklQuScACvo34q6B/wAI5oV7q00zxWsEUkpkj+V9sal+MjuBiv53fF3g7wh+0JfWPjHxnLdW6X5LxIJR5iI3ChmPUivyPxZ4lxmExNHK8rXJzK8pq10r2sr3P6C8LOFMFWwtXH4mKm07Ri72b3bdj9BfAn/BaG/t/EcCW1vq+m2dxOEgng1Ri/l7trO0TtgkdduM9uvX93vgz/wUR8dNptjrGrSQ+MNEvUWSKdQIbkxt0ZZVG1j7Oo56mv5dPCv7CPwai014rWbUPtECFllM2drNyp24wfXnrX3X+wYuq+H/AIL3Gi6zcG8lsNYvbcEnACIwwB9ev1NdfAWOzH26w2Yy9pGWzdrq3mkjm494fwiw/wBYp0lB32V7fjc/sF+GPxa8EfFzQv7d8G3XmBMCe3kGyeBiPuypzj2IJVuxr0qv59fhd448S+BdZt/G/guVre5iONhbKSIPvRSr/Ejd+46jBr9wPhL8T9B+L3gi18aaD8iy5jngJy8E6cSRN/unkH+JSD3r9PzTKnQtOPws/CqkLPQ//9D+lz9sT4g61d/EKDwrpjbbPSIRuBAKvcTDLk5B+4u1R6ZNfMGp+Lba3t/tKlXaSNRtUAYIPO6un+LHiLW/EPjXWLy805mT7bdMkikA7FkZQc/RRxXztLfG4uPJEZkLH7qkZNfqi9nRwsKS6L89/wATHB03ObkeW/HbVtY1PwLrt7cQPexC1lEibjhY3BViP90HOO+K/D34leAvC3h++Ok6Tdfb7azhiW3lVVCsGRTk4zyCe3Uiv6HLnVtRhszYxaR+7dSGyQ2Qeuc9R7GvxV/ap8K6bb/EzU9L0gtpImKSLHbhUMRZFyEyNu0/oSelfzf4s4GX1iljYS6ctvxuf054S5hQnhpZe4e9fm5rvayVv1uWvAHhG11LTdC1ttRurS4tbYxup3p56g5G7cBkr7dq/Qf4G+B10n4d2dnYW4tllaed3AP72SWVmMhzzl8j6AV8D/CfRpPBP/E6+J3iC6uNGjKylblEVbS3jHzuxXJ+b+Ns4CjOBzX6waTr0cul2s2h2/mWrxq0MkbBkdCPlKkcFSOmK9jw+o+8qslaxn4o4uCisOtXuQWd9q/hy58l0O3qVPII9j2r7Y/YM+J8nhz4r3Hw/upCLPxJGTGhPC3UCl0I93j3KfXAr4z1O4m1BQ5tXjdRgEYx+NbvwX1SXRvi34a1mMESWuqWrDaQDzKqN17bWPFfs1d+2oyhLsfz3iopaI//0f32+MUEGg+Ldf0qZWBguLoY346uWHf0YGvzI+Jv7R/wt+BsE3iPx7qsVulupbyQ37xvYKOa/YD9vDwdd+HNfHjmzjdrTWYBHIy/dS4gxuDf78YBHrg1/mx/tE/E/wATePPib4j1bWbya4WTVL4wrI5IjT7TIFAHQYUAVfFHE8qFCHsl7zX5H0WTUaKTqVtV2P3i8Of8FbNR+M/7Qvh74S+CNL+waNq+ox2fmyH99IuGdj1+UFUPHXua7D4s+O/HcfxF1DS7jU2K3TGULCRsMUpZowcg8gcH6V/MR8NfiNr3wr+I+jfEzw+sT6joV19stRNkx+Z5ckXzBcHG2Rulf0DfB3xlq3xN+DviD4+eIZLJdU0+1tWihltY2t88Fvmk2OMK3ytuODySelflVKvPE1ubENyfTst7/gfa4DPf3LoU7Ru9fRban1N8INN1zVvhlqPibxRbi2s47C4igSQ7WnkljMaDLcBMtwT1PtX5i/C74mfthfslfBzV9Xt73UrODwvewRy6RerHNZLYsgBktXOQfnOSEbYF6ANxXo3xV/bH+KWr6PoHhXRf7JhQ6igmDhUhuQob5ZN0zqqAcjn7wBz2r3nxjY3Pxf8Agxr/AIJ1+0m0yG9spz5kUi3FuXKbleEhjswVB29DW2ZZgqFOnh8E3Zbvrfr8ux+kZVh6Od+3xuMupxVopfClbT1d9WY/wl/4Laadc3MWm/F7QCkT/K11YnDL6kxNwfwbPtX7XfsjfEjwD+0z4l8IeJ/hNfjUtO1HWbeHdsaN43gmV5UkRgGVlCHIP1r+CLQpt1slzOuZZgJNnZQ3PP8AIV/al/wayfDm+8X6D47+K98HOn+HdZW0hVgfL+3zWMLEITwSkEgZsdCwzzX6Hw7m+I5LVJ3Vj+fswxcZycXHbsf/0v7Wfih8OdA+K/gi+8DeJARb3i/LIn34ZV5SVPdTzjuMg8Gv8qr/AIKTfse/G79iz9p3xH8NfjTpIsZL28vNS0y8gDGx1KwmuHkW6spGxujUSBZoj89tJ8rjaY5JP9ZSvmL9rL9jb9m79uD4WSfB39prwvbeJdH8z7Ras+YruwugpVbqxukxLbXChiBJGwOCQcgkHzM0yyOKhyy0fQ6qGKlBcvQ/x/ZZVVlIFfrt+zn8UNS0n9mybwzZRx+RqpWGWRyN/wAuBhCTGAMLg/OevUYr9Ov2x/8Ag1Q/ah+HV5e+If2MPFFj8TNDUO9vpOtyR6PrsYVRtj+0ohsLslg3PlW3UZPBJ+GPBP8AwT1/4KA/A3wmnhj4k/B3xnps8F62PL0171ShjPzLJpdxOuNxxkyDJ7V8JjMtr4X32tF1PYyutF1En1Pg/wDaPvlHhJGVkk8uRs/OrZ3KewnlH6CvcP2Lv2m/BFj4WTw38Q9Wh014kmhmluH8tHhCgRsxPykhcg98/WvbvGn/AATt/b9+OlgfD/w9+CvjTVnuGP7yaxlsVQjoWfVZraPH/bQ/THNfe37D/wDwanftQeLNY07xZ+2b4k034daJG8NzLpGkvHrWuSEAlo/PdFsLQ5Kgt5dycA4OcEc1DJsRjKKlFWs7pn02D4llluL9pB3TVmj8ZP2Tf2D/AIl/t2/tRn4J/sr7tVs5JfOn1e5heOy0zTd5X7dfDjEQAYQRAh7thtjwnmSR/wCnd+xr+yZ8Lf2H/wBm/wAM/s0fCBJG0nw7blZLu42m6v7yU+ZdX10yhQ09zKWkcgAAnAAAAqf9lT9j39nL9ij4ZD4Tfs1+GLbw5pUkxurx0zJd392wCtdX10+Zbm4YKAZJGJwABgAAfTFfpWBwio01HqfA42sqlaVSKsmz/9k="
										},
										"alene42@flustered-ship.info": {
											"jid": "alene42@flustered-ship.info",
											"nickname": "Alène",
											"avatar": null
										},
										"hayden.crist@flustered-ship.info": {
											"jid": "hayden.crist@flustered-ship.info",
											"nickname": "hayden.crist",
											"avatar": null
										}
									}
								}
							},
							"text/event-stream": {
								"schema": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"$ref": "#/components/schemas/sse-events/enriched-member"
											},
											{ "$ref": "#/components/schemas/sse-events/end" }
										],
										"discriminator": {
											"propertyName": "event"
										}
									}
								},
								"example": "id:maximilian_macgyver52@flustered-ship.info\n:\nevent:enriched-member\ndata:{\"jid\":\"maximilian_macgyver52@flustered-ship.info\",\"nickname\":\"Max MacGyver\",\"avatar\":\"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\"}\n\nid:alene42@flustered-ship.info\nevent:enriched-member\ndata:{\"jid\":\"alene42@flustered-ship.info\",\"nickname\":\"Alène\",\"avatar\":null}\n\nid:hayden.crist@flustered-ship.info\nevent:enriched-member\ndata:{\"jid\":\"hayden.crist@flustered-ship.info\",\"nickname\":\"hayden.crist\",\"avatar\":null}\n\n:End of stream\nid:end\nevent:end\ndata:\n\n\n"
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/server/compliance-tests": {
			"get": {
				"tags": ["Server / Compliance tests"],
				"summary": "Get the results of all Compliance Suites executed on your server.",
				"description": "Get the results of all Compliance Suites executed on your server.",
				"operationId": "get_compliance_tests_results",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			},
			"put": {
				"tags": ["Server / Compliance tests"],
				"summary": "Configure which Compliance Suites to test on your server.",
				"description": "Configure which Compliance Suites to test on your server.",
				"operationId": "set_compliance_test_suites",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/server/compliance-tests/{xepId}": {
			"get": {
				"tags": ["Server / Compliance tests"],
				"summary": "Get the results of a Compliance Suite executed on your server.",
				"description": "Get the results of a Compliance Suite executed on your server.",
				"operationId": "get_compliance_suite_results",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/XepId" }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/pod/config": {
			"get": {
				"tags": ["Pod / Configuration"],
				"summary": "Get Pod config",
				"description": "Get the current configuration of the Prose Pod.",
				"operationId": "get_pod_config",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PodConfig" }
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/pod/config/address": {
			"put": {
				"tags": ["Init", "Pod / Configuration"],
				"summary": "Set Pod address",
				"description": "Tells the API how the Pod is publicly accessible.",
				"operationId": "set_pod_address",
				"security": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetPodAddressRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PodAddress" }
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PodAddress" }
							}
						},
						"headers": {
							"Location": { "$ref": "#/components/headers/Location" }
						}
					}
				}
			},
			"get": {
				"tags": ["Pod / Configuration"],
				"summary": "Get Pod address",
				"description": "Get the current address of the Prose Pod.",
				"operationId": "get_pod_address",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PodAddress" }
							}
						}
					},
					"400": { "$ref": "#/components/responses/PodAddressNotInitialized" },
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/server/config": {
			"put": {
				"tags": ["Init"],
				"summary": "Initialize the XMPP server",
				"description": "Initializes the XMPP server and returns its default configuration.",
				"operationId": "init_server_config",
				"security": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InitServerConfigRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ServerConfig" }
							}
						},
						"headers": {
							"Location": { "$ref": "#/components/headers/Location" }
						}
					},
					"409": {
						"$ref": "#/components/responses/ServerConfigAlreadyInitialized"
					}
				}
			},
			"get": {
				"tags": ["Server / Configuration"],
				"summary": "Get server config",
				"description": "Get the current configuration of the XMPP server.",
				"operationId": "get_server_config",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"$ref": "#/components/responses/GetServerConfigAllResponses"
				}
			}
		},
		"/v1/server/config/file-upload-allowed": {
			"put": {
				"tags": ["Server / Configuration"],
				"summary": "Change file upload settings",
				"description": "Activate or deactivate file upload and sharing.",
				"operationId": "set_file_upload_allowed",
				"security": [{ "BearerAuth": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetFileUploadAllowedRequest"
							}
						}
					}
				},
				"responses": {
					"$ref": "#/components/responses/GetServerConfigAllResponses"
				}
			}
		},
		"/v1/server/config/file-storage-retention": {
			"put": {
				"tags": ["Server / Configuration"],
				"summary": "Change uploaded files retention",
				"description": "Change the retention of uploaded files.",
				"operationId": "set_file_storage_retention",
				"security": [{ "BearerAuth": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetFileStorageRetentionRequest"
							}
						}
					}
				},
				"responses": {
					"$ref": "#/components/responses/GetServerConfigAllResponses"
				}
			}
		},
		"/v1/server/config/file-storage-encryption-scheme": {
			"put": {
				"tags": ["Server / Configuration"],
				"summary": "Change file storage encryption scheme",
				"description": "Change the file storage encryption scheme.",
				"operationId": "set_file_storage_encryption_scheme",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"$ref": "#/components/responses/GetServerConfigAllResponses"
				}
			}
		},
		"/v1/server/config/messaging/reset": {
			"put": {
				"tags": ["Server / Configuration"],
				"summary": "Reset 'Messaging' configuration",
				"description": "Reset the 'Messaging' configuration to its default value.",
				"operationId": "reset_messaging_config",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"$ref": "#/components/responses/GetServerConfigAllResponses"
				}
			}
		},
		"/v1/server/config/message-archive-retention": {
			"put": {
				"tags": ["Server / Configuration"],
				"summary": "Change message archive retention",
				"description": "Update message archive retention.",
				"operationId": "set_message_archive_retention",
				"security": [{ "BearerAuth": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetMessageArchiveRetentionRequest"
							}
						}
					}
				},
				"responses": {
					"$ref": "#/components/responses/GetServerConfigAllResponses"
				}
			}
		},
		"/v1/server/config/message-archive-retention/reset": {
			"put": {
				"tags": ["Server / Configuration"],
				"summary": "Reset message archive retention",
				"description": "Reset the message archive retention to its default value.",
				"operationId": "reset_message_archive_retention",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"$ref": "#/components/responses/GetServerConfigAllResponses"
				}
			}
		},
		"/v1/server/config/files/reset": {
			"put": {
				"tags": ["Server / Configuration"],
				"summary": "Reset 'Files' configuration",
				"description": "Reset the 'Files' configuration to its default value.",
				"operationId": "reset_files_config",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"$ref": "#/components/responses/GetServerConfigAllResponses"
				}
			}
		},
		"/v1/server/config/message-archive-enabled": {
			"put": {
				"tags": ["Server / Configuration"],
				"summary": "Activate or deactivate message archiving",
				"description": "Activate or deactivate message archiving.",
				"operationId": "set_message_archive_enabled",
				"security": [{ "BearerAuth": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetMessageArchiveEnabledRequest"
							}
						}
					}
				},
				"responses": {
					"$ref": "#/components/responses/GetServerConfigAllResponses"
				}
			}
		},
		"/v1/server/connection-history": {
			"get": {
				"tags": ["Server / Connection History"],
				"summary": "Get user connect history (aggregated for each user, eg. John connected 3 times today).",
				"description": "Get user connect history (aggregated for each user, eg. John connected 3 times today).",
				"operationId": "get_history",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/server/connection-history/audit-log": {
			"get": {
				"tags": ["Server / Connection History"],
				"summary": "Get connection audit log (with countries and IP addresses).",
				"description": "Get connection audit log (with countries and IP addresses).",
				"operationId": "get_audit_log",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/server/connection-history/security-events": {
			"get": {
				"tags": ["Server / Connection History"],
				"summary": "Get security events (eg. failed user logins).",
				"description": "Get security events (eg. failed user logins).",
				"operationId": "get_security_events",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/server/data/usage": {
			"get": {
				"tags": ["Server / Data Storage"],
				"summary": "Get how much data is stored on the server for everyone at once.",
				"description": "Get how much data is stored on the server for everyone at once.",
				"operationId": "get_data_usage",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/server/data/usage-per-user/{memberId}": {
			"get": {
				"tags": ["Server / Data Storage"],
				"summary": "Get how much data is stored on the server per-user.",
				"description": "Get how much data is stored on the server per-user.",
				"operationId": "get_data_usage_per_user",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/MemberId" }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/server/insights/active-users": {
			"get": {
				"tags": ["Server / Insights"],
				"summary": "Get how many users are active.",
				"description": "Get how many users are active.",
				"operationId": "get_active_users",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							},
							"text/event-stream": {
								"description": "A stream (as Server Sent Events)",
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/server/insights/server-to-server-stats": {
			"get": {
				"tags": ["Server / Insights"],
				"summary": "Get server-to-server stats (message stats to/from external servers).",
				"description": "Get server-to-server stats (message stats to/from external servers).",
				"operationId": "get_server_to_server_stats",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/server/logs": {
			"get": {
				"tags": ["Server / Logs"],
				"summary": "Get server logs between two timestamps.",
				"description": "Get server logs between two timestamps.",
				"operationId": "get_server_logs",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							},
							"text/event-stream": {
								"description": "A stream (as Server Sent Events)",
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/workspace": {
			"put": {
				"tags": ["Init"],
				"summary": "Initialize the workspace",
				"description": "Initializes the workspace and returns its default configuration.",
				"operationId": "init_workspace",
				"security": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/InitWorkspaceRequest" }
						}
					}
				},
				"responses": {
					"201": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Workspace" }
							}
						},
						"headers": {
							"Location": { "$ref": "#/components/headers/Location" }
						}
					},
					"409": {
						"$ref": "#/components/responses/WorkspaceAlreadyInitialized"
					}
				}
			}
		},
		"/v1/workspace/accent-color": {
			"get": {
				"tags": ["Workspace"],
				"summary": "Get the accent color of your workspace.",
				"description": "Get the accent color of your workspace.",
				"operationId": "get_workspace_accent_color",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetWorkspaceAccentColorResponse"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			},
			"put": {
				"tags": ["Workspace"],
				"summary": "Set the accent color of your workspace.",
				"description": "Set the accent color of your workspace.",
				"operationId": "set_workspace_accent_color",
				"security": [{ "BearerAuth": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetWorkspaceAccentColorRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetWorkspaceAccentColorResponse"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/workspace/details-card": {
			"get": {
				"tags": ["Workspace"],
				"summary": "Get the details card of your workspace.",
				"description": "Get the details card of your workspace.",
				"operationId": "get_workspace_details_card",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"text/vcard": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			},
			"put": {
				"tags": ["Workspace"],
				"summary": "Set the details card of your workspace.",
				"description": "Set the details card of your workspace.",
				"operationId": "set_workspace_details_card",
				"security": [{ "BearerAuth": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"text/vcard": {
							"schema": {
								"type": "string"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Success",
						"headers": {
							"Location": { "$ref": "#/components/headers/Location" }
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/workspace/icon": {
			"get": {
				"tags": ["Workspace"],
				"summary": "Get workspace icon",
				"description": "Get the icon of your workspace.",
				"operationId": "get_workspace_icon",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetWorkspaceIconResponse"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			},
			"put": {
				"tags": ["Workspace"],
				"summary": "Set workspace icon",
				"description": "Set the icon of your workspace.\nAccepted content types are: `image/jpeg`, `image/png`, `image/gif`, `image/webp` and `text/plain` (containing either the URL to an external image or a base64-encoded image).",
				"operationId": "set_workspace_icon",
				"security": [{ "BearerAuth": [] }],
				"requestBody": {
					"description": "Workspace icon",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetWorkspaceIconRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetWorkspaceIconResponse"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/workspace/name": {
			"get": {
				"tags": ["Workspace"],
				"summary": "Get workspace name",
				"description": "Get the name of your workspace.",
				"operationId": "get_workspace_name",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetWorkspaceNameResponse"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			},
			"put": {
				"tags": ["Workspace"],
				"summary": "Set workspace name",
				"description": "Set the name of your workspace.",
				"operationId": "set_workspace_name",
				"security": [{ "BearerAuth": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetWorkspaceNameRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetWorkspaceNameResponse"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/workspace/reactions": {
			"get": {
				"tags": ["Workspace / Reactions"],
				"summary": "Get workspace reactions",
				"description": "Get custom reactions defined in your workspace.",
				"operationId": "get_workspace_reactions",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			},
			"post": {
				"tags": ["Workspace / Reactions"],
				"summary": "Add workspace reaction",
				"description": "Add a custom reaction to your workspace.",
				"operationId": "add_workspace_reaction",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/workspace/reactions/{reactionId}": {
			"get": {
				"tags": ["Workspace / Reactions"],
				"summary": "Get workspace reaction",
				"description": "Get details about a custom reaction defined in your workspace.",
				"operationId": "get_workspace_reaction",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/ReactionId" }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			},
			"put": {
				"tags": ["Workspace / Reactions"],
				"summary": "Edit workspace reaction",
				"description": "Edit a custom reaction defined in your workspace.",
				"operationId": "edit_workspace_reaction",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/ReactionId" }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			},
			"delete": {
				"tags": ["Workspace / Reactions"],
				"summary": "Delete workspace reaction",
				"description": "Delete a custom reaction from your workspace.",
				"operationId": "delete_workspace_reaction",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/ReactionId" }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/network/dns/records": {
			"get": {
				"tags": ["DNS setup"],
				"summary": "Get DNS records",
				"description": "To link a Prose Pod to a domain, one needs to configure DNS records. This route allows retrieving the DNS entries which need to be added to the domain's DNS records.",
				"operationId": "get_dns_records",
				"security": [{ "BearerAuth": [] }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetDnsRecordsResponse"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/PodAddressNotInitialized"
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/network/checks": {
			"get": {
				"tags": ["Network configuration checker"],
				"summary": "Check the whole network configuration",
				"description": "Runs \"Check DNS records\", \"Check ports reachability\" and \"Check IP connectivity\" in a single Server-Sent Events stream.",
				"operationId": "check_network_configuration",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/RetryInterval" }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"$ref": "#/components/schemas/sse-events/dns-record-check-result"
											},
											{
												"$ref": "#/components/schemas/sse-events/port-reachability-check-result"
											},
											{
												"$ref": "#/components/schemas/sse-events/ip-connectivity-check-result"
											},
											{ "$ref": "#/components/schemas/sse-events/end" }
										],
										"discriminator": {
											"propertyName": "event"
										}
									}
								},
								"example": [
									{
										"id": "IPv4",
										"event": "dns-record-check-result",
										"data": {
											"description": "IPv4 record for xmpp.crisp.chat",
											"status": "VALID"
										}
									},
									{
										"id": "IPv6",
										"event": "dns-record-check-result",
										"data": {
											"description": "IPv6 record for xmpp.crisp.chat",
											"status": "VALID"
										}
									},
									{
										"id": "SRV-c2s",
										"event": "dns-record-check-result",
										"data": {
											"description": "SRV record for client-to-server connections",
											"status": "VALID"
										}
									},
									{
										"id": "SRV-s2s",
										"event": "dns-record-check-result",
										"data": {
											"description": "SRV record for server-to-server connections",
											"status": "VALID"
										}
									},
									{
										"id": "TCP-c2s",
										"event": "port-reachability-check-result",
										"data": {
											"description": "Client-to-server port at TCP 5222",
											"status": "OPEN"
										}
									},
									{
										"id": "TCP-s2s",
										"event": "port-reachability-check-result",
										"data": {
											"description": "Server-to-server port at TCP 5269",
											"status": "CLOSED"
										}
									},
									{
										"id": "TCP-HTTPS",
										"event": "port-reachability-check-result",
										"data": {
											"description": "HTTP server port at TCP 443",
											"status": "OPEN"
										}
									},
									{
										"id": "IPv4-c2s",
										"event": "ip-connectivity-check-result",
										"data": {
											"description": "Client-to-server connectivity over IPv4",
											"status": "SUCCESS"
										}
									},
									{
										"id": "IPv6-c2s",
										"event": "ip-connectivity-check-result",
										"data": {
											"description": "Client-to-server connectivity over IPv6",
											"status": "FAILURE"
										}
									},
									{
										"id": "IPv4-s2s",
										"event": "ip-connectivity-check-result",
										"data": {
											"description": "Server-to-server connectivity over IPv4",
											"status": "SUCCESS"
										}
									},
									{
										"id": "IPv6-s2s",
										"event": "ip-connectivity-check-result",
										"data": {
											"description": "Server-to-server connectivity over IPv6",
											"status": "FAILURE"
										}
									}
								]
							},
							"text/event-stream": {
								"schema": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"$ref": "#/components/schemas/sse-events/dns-record-check-result"
											},
											{
												"$ref": "#/components/schemas/sse-events/port-reachability-check-result"
											},
											{
												"$ref": "#/components/schemas/sse-events/ip-connectivity-check-result"
											},
											{ "$ref": "#/components/schemas/sse-events/end" }
										],
										"discriminator": {
											"propertyName": "event"
										}
									}
								},
								"example": "id:IPv4\nevent:dns-record-check-result\ndata:{\"description\":\"IPv4 record for xmpp.crisp.chat\",\"status\":\"CHECKING\"}\n\nid:IPv6\nevent:dns-record-check-result\ndata:{\"description\":\"IPv6 record for xmpp.crisp.chat\",\"status\":\"CHECKING\"}\n\nid:SRV-c2s\n:\nevent:dns-record-check-result\ndata:{\"description\":\"SRV record for client-to-server connections\",\"status\":\"CHECKING\"}\n\nid:SRV-s2s\nevent:dns-record-check-result\ndata:{\"description\":\"SRV record for server-to-server connections\",\"status\":\"CHECKING\"}\n\nid:TCP-c2s\nevent:port-reachability-check-result\ndata:{\"description\":\"Client-to-server port at TCP 5222\",\"status\":\"CHECKING\"}\n\nid:TCP-s2s\nevent:port-reachability-check-result\ndata:{\"description\":\"Server-to-server port at TCP 5269\",\"status\":\"CHECKING\"}\n\nid:TCP-HTTPS\nevent:port-reachability-check-result\ndata:{\"description\":\"HTTP server port at TCP 443\",\"status\":\"CHECKING\"}\n\nid:IPv4-c2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Client-to-server connectivity over IPv4\",\"status\":\"CHECKING\"}\n\nid:IPv6-c2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Client-to-server connectivity over IPv6\",\"status\":\"CHECKING\"}\n\nid:IPv4-s2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Server-to-server connectivity over IPv4\",\"status\":\"CHECKING\"}\n\nid:IPv6-s2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Server-to-server connectivity over IPv6\",\"status\":\"CHECKING\"}\n\nid:IPv4\nevent:dns-record-check-result\ndata:{\"description\":\"IPv4 record for xmpp.crisp.chat\",\"status\":\"VALID\"}\n\nid:IPv6\nevent:dns-record-check-result\ndata:{\"description\":\"IPv6 record for xmpp.crisp.chat\",\"status\":\"VALID\"}\n\nid:SRV-c2s\nevent:dns-record-check-result\ndata:{\"description\":\"SRV record for client-to-server connections\",\"status\":\"VALID\"}\n\nid:SRV-s2s\nevent:dns-record-check-result\ndata:{\"description\":\"SRV record for server-to-server connections\",\"status\":\"VALID\"}\n\nid:TCP-c2s\nevent:port-reachability-check-result\ndata:{\"description\":\"Client-to-server port at TCP 5222\",\"status\":\"OPEN\"}\n\nid:TCP-s2s\nevent:port-reachability-check-result\ndata:{\"description\":\"Server-to-server port at TCP 5269\",\"status\":\"CLOSED\"}\n\nid:TCP-HTTPS\nevent:port-reachability-check-result\ndata:{\"description\":\"HTTP server port at TCP 443\",\"status\":\"OPEN\"}\n\nid:IPv4-c2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Client-to-server connectivity over IPv4\",\"status\":\"SUCCESS\"}\n\nid:IPv6-c2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Client-to-server connectivity over IPv6\",\"status\":\"FAILURE\"}\n\nid:IPv4-s2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Server-to-server connectivity over IPv4\",\"status\":\"SUCCESS\"}\n\nid:IPv6-s2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Server-to-server connectivity over IPv6\",\"status\":\"FAILURE\"}\n\nid:TCP-s2s\nevent:port-reachability-check-result\ndata:{\"description\":\"Server-to-server port at TCP 5269\",\"status\":\"OPEN\"}\n\nid:IPv6-c2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Client-to-server connectivity over IPv6\",\"status\":\"SUCCESS\"}\n\nid:IPv6-s2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Server-to-server connectivity over IPv6\",\"status\":\"SUCCESS\"}\n\n:End of stream\nid:end\nevent:end\ndata:\n\n\n"
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/network/checks/dns": {
			"get": {
				"tags": ["Network configuration checker"],
				"summary": "Check DNS records",
				"description": "Checks that all DNS records are properly configured.\n\nThis route regularly checks the domain's DNS records to provide \"live\" information. It opens a stream of Server-Sent Events and sends `dns-record-check-result` events every few seconds.\nNOTE: There might be a `(\\n|^):(\\n|$)` lurking in one of the events. We don't know where it comes from and it should be ignored by SSE parsers but don't be suprised to see it.",
				"operationId": "check_dns_records",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/RetryInterval" }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/sse-events/dns-record-check-result"
									}
								},
								"example": [
									{
										"id": "IPv4",
										"event": "dns-record-check-result",
										"data": {
											"description": "IPv4 record for xmpp.crisp.chat",
											"status": "VALID"
										}
									},
									{
										"id": "IPv6",
										"event": "dns-record-check-result",
										"data": {
											"description": "IPv6 record for xmpp.crisp.chat",
											"status": "VALID"
										}
									},
									{
										"id": "SRV-c2s",
										"event": "dns-record-check-result",
										"data": {
											"description": "SRV record for client-to-server connections",
											"status": "VALID"
										}
									},
									{
										"id": "SRV-s2s",
										"event": "dns-record-check-result",
										"data": {
											"description": "SRV record for server-to-server connections",
											"status": "VALID"
										}
									}
								]
							},
							"text/event-stream": {
								"schema": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"$ref": "#/components/schemas/sse-events/dns-record-check-result"
											},
											{ "$ref": "#/components/schemas/sse-events/end" }
										],
										"discriminator": {
											"propertyName": "event"
										}
									}
								},
								"example": "id:IPv4\nevent:dns-record-check-result\ndata:{\"description\":\"IPv4 record for xmpp.crisp.chat\",\"status\":\"CHECKING\"}\n\nid:IPv6\nevent:dns-record-check-result\ndata:{\"description\":\"IPv6 record for xmpp.crisp.chat\",\"status\":\"CHECKING\"}\n\nid:SRV-c2s\nevent:dns-record-check-result\ndata:{\"description\":\"SRV record for client-to-server connections\",\"status\":\"CHECKING\"}\n\nid:SRV-s2s\n:\nevent:dns-record-check-result\ndata:{\"description\":\"SRV record for server-to-server connections\",\"status\":\"CHECKING\"}\n\nid:IPv4\nevent:dns-record-check-result\ndata:{\"description\":\"IPv4 record for xmpp.crisp.chat\",\"status\":\"VALID\"}\n\nid:IPv6\nevent:dns-record-check-result\ndata:{\"description\":\"IPv6 record for xmpp.crisp.chat\",\"status\":\"VALID\"}\n\nid:SRV-c2s\nevent:dns-record-check-result\ndata:{\"description\":\"SRV record for client-to-server connections\",\"status\":\"VALID\"}\n\nid:SRV-s2s\nevent:dns-record-check-result\ndata:{\"description\":\"SRV record for server-to-server connections\",\"status\":\"VALID\"}\n\n:End of stream\nid:end\nevent:end\ndata:\n\n\n"
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/network/checks/ports": {
			"get": {
				"tags": ["Network configuration checker"],
				"summary": "Check ports reachability",
				"description": "Checks that all required ports are opened and reachable.\n\nThis route regularly checks the domain's open ports to provide \"live\" information. It opens a stream of Server-Sent Events and sends `port-reachability-check-result` events every few seconds.\nNOTE: There might be a `(\\n|^):(\\n|$)` lurking in one of the events. We don't know where it comes from and it should be ignored by SSE parsers but don't be suprised to see it.",
				"operationId": "check_ports",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/RetryInterval" }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/sse-events/port-reachability-check-result"
									}
								},
								"example": [
									{
										"id": "TCP-c2s",
										"event": "port-reachability-check-result",
										"data": {
											"description": "Client-to-server port at TCP 5222",
											"status": "OPEN"
										}
									},
									{
										"id": "TCP-s2s",
										"event": "port-reachability-check-result",
										"data": {
											"description": "Server-to-server port at TCP 5269",
											"status": "CLOSED"
										}
									},
									{
										"id": "TCP-HTTPS",
										"event": "port-reachability-check-result",
										"data": {
											"description": "HTTP server port at TCP 443",
											"status": "OPEN"
										}
									}
								]
							},
							"text/event-stream": {
								"schema": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"$ref": "#/components/schemas/sse-events/port-reachability-check-result"
											},
											{ "$ref": "#/components/schemas/sse-events/end" }
										],
										"discriminator": {
											"propertyName": "event"
										}
									}
								},
								"example": "id:TCP-c2s\n:\nevent:port-reachability-check-result\ndata:{\"description\":\"Client-to-server port at TCP 5222\",\"status\":\"CHECKING\"}\n\nid:TCP-s2s\nevent:port-reachability-check-result\ndata:{\"description\":\"Server-to-server port at TCP 5269\",\"status\":\"CHECKING\"}\n\nid:TCP-HTTPS\nevent:port-reachability-check-result\ndata:{\"description\":\"HTTP server port at TCP 443\",\"status\":\"CHECKING\"}\n\nid:TCP-c2s\nevent:port-reachability-check-result\ndata:{\"description\":\"Client-to-server port at TCP 5222\",\"status\":\"OPEN\"}\n\nid:TCP-s2s\nevent:port-reachability-check-result\ndata:{\"description\":\"Server-to-server port at TCP 5269\",\"status\":\"CLOSED\"}\n\nid:TCP-HTTPS\nevent:port-reachability-check-result\ndata:{\"description\":\"HTTP server port at TCP 443\",\"status\":\"OPEN\"}\n\nid:TCP-s2s\nevent:port-reachability-check-result\ndata:{\"description\":\"Server-to-server port at TCP 5269\",\"status\":\"OPEN\"}\n\n:End of stream\nid:end\nevent:end\ndata:\n\n\n"
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		},
		"/v1/network/checks/ip": {
			"get": {
				"tags": ["Network configuration checker"],
				"summary": "Check IP connectivity",
				"description": "Checks that your server has connection over all IP protocols.\n\nThis route regularly checks the domain's IP to provide \"live\" information. It opens a stream of Server-Sent Events and sends `ip-connectivity-check-result` events every few seconds.\nNOTE: There might be a `(\\n|^):(\\n|$)` lurking in one of the events. We don't know where it comes from and it should be ignored by SSE parsers but don't be suprised to see it.",
				"operationId": "check_ip",
				"security": [{ "BearerAuth": [] }],
				"parameters": [{ "$ref": "#/components/parameters/RetryInterval" }],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/sse-events/ip-connectivity-check-result"
									}
								},
								"example": [
									{
										"id": "IPv4-c2s",
										"event": "ip-connectivity-check-result",
										"data": {
											"description": "Client-to-server connectivity over IPv4",
											"status": "SUCCESS"
										}
									},
									{
										"id": "IPv6-c2s",
										"event": "ip-connectivity-check-result",
										"data": {
											"description": "Client-to-server connectivity over IPv6",
											"status": "FAILURE"
										}
									},
									{
										"id": "IPv4-s2s",
										"event": "ip-connectivity-check-result",
										"data": {
											"description": "Server-to-server connectivity over IPv4",
											"status": "SUCCESS"
										}
									},
									{
										"id": "IPv6-s2s",
										"event": "ip-connectivity-check-result",
										"data": {
											"description": "Server-to-server connectivity over IPv6",
											"status": "FAILURE"
										}
									}
								]
							},
							"text/event-stream": {
								"schema": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"$ref": "#/components/schemas/sse-events/ip-connectivity-check-result"
											},
											{ "$ref": "#/components/schemas/sse-events/end" }
										],
										"discriminator": {
											"propertyName": "event"
										}
									}
								},
								"example": "id:IPv4-c2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Client-to-server connectivity over IPv4\",\"status\":\"CHECKING\"}\n\nid:IPv6-c2s\n:\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Client-to-server connectivity over IPv6\",\"status\":\"CHECKING\"}\n\nid:IPv4-s2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Server-to-server connectivity over IPv4\",\"status\":\"CHECKING\"}\n\nid:IPv6-s2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Server-to-server connectivity over IPv6\",\"status\":\"CHECKING\"}\n\nid:IPv4-c2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Client-to-server connectivity over IPv4\",\"status\":\"SUCCESS\"}\n\nid:IPv6-c2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Client-to-server connectivity over IPv6\",\"status\":\"FAILURE\"}\n\nid:IPv4-s2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Server-to-server connectivity over IPv4\",\"status\":\"SUCCESS\"}\n\nid:IPv6-s2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Server-to-server connectivity over IPv6\",\"status\":\"FAILURE\"}\n\nid:IPv6-c2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Client-to-server connectivity over IPv6\",\"status\":\"SUCCESS\"}\n\nid:IPv6-s2s\nevent:ip-connectivity-check-result\ndata:{\"description\":\"Server-to-server connectivity over IPv6\",\"status\":\"SUCCESS\"}\n\n:End of stream\nid:end\nevent:end\ndata:\n\n\n"
							}
						}
					},
					"401": { "$ref": "#/components/responses/Unauthorized" },
					"403": { "$ref": "#/components/responses/Forbidden" }
				}
			}
		}
	},
	"components": {
		"schemas": {
			"Error": {
				"type": "object",
				"required": ["reason"],
				"properties": {
					"reason": {
						"type": "string",
						"enum": [
							"bad_request",
							"database_error",
							"internal_server_error",
							"not_found",
							"not_implemented",
							"workspace_already_initialized",
							"workspace_not_initialized",
							"server_config_already_initialized",
							"server_config_not_initialized",
							"first_account_already_initialized",
							"unauthorized",
							"forbidden",
							"unknown"
						],
						"example": "bad_request"
					}
				}
			},
			"InvitationToken": {
				"oneOf": [
					{ "$ref": "#/components/schemas/InvitationAcceptToken" },
					{ "$ref": "#/components/schemas/InvitationRejectToken" }
				]
			},
			"InvitationAcceptToken": {
				"type": "string",
				"format": "uuid",
				"example": "20edadc2-6c3b-4297-b92a-042f23249225"
			},
			"InvitationRejectToken": {
				"type": "string",
				"format": "uuid",
				"example": "f2736e87-850e-4776-bb26-52c12a7d8bd8"
			},
			"InvitationTokenType": {
				"type": "string",
				"enum": ["accept", "reject"],
				"example": "accept"
			},
			"AcceptWorkspaceInvitationRequest": {
				"type": "object",
				"required": ["nickname", "password"],
				"properties": {
					"nickname": { "$ref": "#/components/schemas/Nickname" },
					"password": { "$ref": "#/components/schemas/Password" }
				}
			},
			"GetWorkspaceAccentColorResponse": {
				"type": "object",
				"properties": {
					"color": { "$ref": "#/components/schemas/WorkspaceAccentColor" }
				}
			},
			"SetWorkspaceIconRequest": {
				"type": "object",
				"required": ["image"],
				"properties": {
					"image": { "$ref": "#/components/schemas/Avatar" }
				}
			},
			"GetWorkspaceIconResponse": {
				"type": "object",
				"properties": {
					"icon": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"GetWorkspaceNameResponse": {
				"type": "object",
				"required": ["name"],
				"properties": {
					"name": { "$ref": "#/components/schemas/WorkspaceName" }
				}
			},
			"InitWorkspaceRequest": {
				"type": "object",
				"required": ["name"],
				"properties": {
					"name": { "$ref": "#/components/schemas/WorkspaceName" }
				}
			},
			"SetPodAddressRequest": {
				"type": "object",
				"required": [],
				"properties": {
					"ipv4": {
						"type": "string",
						"example": "104.18.28.104"
					},
					"ipv6": {
						"type": "string",
						"example": "2606:4700::6812:1c68"
					},
					"hostname": {
						"type": "string",
						"example": "crisp.chat"
					}
				},
				"example": {
					"hostname": "crisp.chat"
				}
			},
			"InitServerConfigRequest": {
				"type": "object",
				"required": ["domain"],
				"properties": {
					"domain": {
						"type": "string",
						"example": "crisp.chat"
					}
				}
			},
			"InitFirstAccountRequest": {
				"type": "object",
				"required": ["username", "password", "nickname"],
				"properties": {
					"username": { "$ref": "#/components/schemas/Username" },
					"password": { "$ref": "#/components/schemas/Password" },
					"nickname": { "$ref": "#/components/schemas/Nickname" }
				}
			},
			"Workspace": {
				"type": "object",
				"required": ["name", "accent_color"],
				"properties": {
					"name": { "$ref": "#/components/schemas/WorkspaceName" },
					"accent_color": {
						"$ref": "#/components/schemas/WorkspaceAccentColor"
					}
				}
			},
			"ServerConfig": {
				"type": "object",
				"required": [
					"domain",
					"message_archive_enabled",
					"message_archive_retention",
					"file_upload_allowed",
					"file_storage_encryption_scheme",
					"file_storage_retention",
					"mfa_required",
					"minimum_tls_version",
					"minimum_cipher_suite",
					"federation_enabled",
					"settings_backup_interval",
					"user_data_backup_interval"
				],
				"properties": {
					"domain": {
						"type": "string",
						"example": "crisp.chat"
					},
					"message_archive_enabled": {
						"type": "boolean",
						"default": true
					},
					"message_archive_retention": {
						"oneOf": [
							{ "$ref": "#/components/schemas/DurationDateLike" },
							{ "$ref": "#/components/schemas/DurationInfinite" }
						],
						"default": "infinite"
					},
					"file_upload_allowed": {
						"type": "boolean",
						"default": true
					},
					"file_storage_encryption_scheme": {
						"type": "string",
						"default": "AES-256"
					},
					"file_storage_retention": {
						"oneOf": [
							{ "$ref": "#/components/schemas/DurationDateLike" },
							{ "$ref": "#/components/schemas/DurationInfinite" }
						],
						"default": "infinite"
					},
					"mfa_required": {
						"title": "Require Multi-Factor Authentication",
						"description": "Whether or not [Multi-Factor Authentication (MFA)](https://en.wikipedia.org/wiki/Multi-factor_authentication) is required for users to log into their account.",
						"type": "boolean",
						"default": true
					},
					"minimum_tls_version": {
						"title": "Minimum SSL/TLS version",
						"description": "The minimum SSL/[TLS](https://fr.wikipedia.org/wiki/Transport_Layer_Security).",
						"type": "string",
						"default": "1.2"
					},
					"minimum_cipher_suite": {
						"title": "Minimum cipher suite (encryption strength)",
						"description": "Accepting lower-security encryption ciphers let older user devices and servers connect to your server, but is also much less secure. A minimum cipher suite of High strength is recommended.",
						"type": "string",
						"enum": ["HIGH_STRENGTH"],
						"default": "HIGH_STRENGTH"
					},
					"federation_enabled": {
						"description": "Whether or not the XMPP server should support interdomain federation. For more information, see [RFC 6120, section 13.14](https://www.rfc-editor.org/rfc/rfc6120#section-13.14).",
						"type": "boolean",
						"default": true
					},
					"settings_backup_interval": {
						"type": "string",
						"format": "duration",
						"default": "P1D"
					},
					"user_data_backup_interval": {
						"type": "string",
						"format": "duration",
						"default": "P1W"
					}
				}
			},
			"PodConfig": {
				"type": "object",
				"required": [],
				"properties": {
					"address": { "$ref": "#/components/schemas/PodAddress" }
				}
			},
			"PodAddress": {
				"type": "object",
				"required": ["type"],
				"properties": {
					"type": {
						"type": "string",
						"enum": ["Static", "Dynamic"]
					},
					"ipv4": {
						"type": "string",
						"example": "104.18.28.104"
					},
					"ipv6": {
						"type": "string",
						"example": "2606:4700::6812:1c68"
					},
					"hostname": {
						"type": "string",
						"example": "crisp.chat"
					}
				},
				"example": {
					"type": "Dynamic",
					"hostname": "crisp.chat"
				}
			},
			"DurationDateLike": {
				"description": "A duration in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601#Durations) containing only date components.",
				"type": "string",
				"format": "duration",
				"example": "P1Y"
			},
			"DurationTimeLike": {
				"description": "A duration in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601#Durations) containing only time components.",
				"type": "string",
				"format": "duration",
				"example": "PT4H"
			},
			"DurationInfinite": {
				"type": "string",
				"enum": ["infinite"]
			},
			"InviteMemberRequest": {
				"allOf": [
					{ "$ref": "#/components/schemas/InvitationContact" },
					{
						"type": "object",
						"required": ["username"],
						"properties": {
							"pre_assigned_role": {
								"$ref": "#/components/schemas/MemberRole"
							},
							"username": { "$ref": "#/components/schemas/Username" }
						}
					}
				]
			},
			"SetMemberMfaRequest": {
				"type": "object"
			},
			"SetMemberRoleRequest": {
				"type": "object",
				"required": ["role"],
				"properties": {
					"role": { "$ref": "#/components/schemas/MemberRole" }
				}
			},
			"EnrichedMember": {
				"type": "object",
				"required": ["jid"],
				"properties": {
					"jid": { "$ref": "#/components/schemas/JID" },
					"online": { "$ref": "#/components/schemas/OnlineStatus" },
					"nickname": { "$ref": "#/components/schemas/Nickname" },
					"avatar": { "$ref": "#/components/schemas/Avatar" }
				}
			},
			"SetFileStorageRetentionRequest": {
				"type": "object",
				"required": ["file_storage_retention"],
				"properties": {
					"file_storage_retention": {
						"oneOf": [
							{ "$ref": "#/components/schemas/DurationDateLike" },
							{ "$ref": "#/components/schemas/DurationInfinite" }
						]
					}
				}
			},
			"SetFileUploadAllowedRequest": {
				"type": "object",
				"required": ["file_upload_allowed"],
				"properties": {
					"file_upload_allowed": {
						"type": "boolean"
					}
				}
			},
			"SetMessageArchiveRetentionRequest": {
				"type": "object",
				"required": ["message_archive_retention"],
				"properties": {
					"message_archive_retention": {
						"oneOf": [
							{ "$ref": "#/components/schemas/DurationDateLike" },
							{ "$ref": "#/components/schemas/DurationInfinite" }
						]
					}
				}
			},
			"SetMessageArchiveEnabledRequest": {
				"type": "object",
				"required": ["message_archive_enabled"],
				"properties": {
					"message_archive_enabled": {
						"type": "boolean"
					}
				}
			},
			"SetWorkspaceAccentColorRequest": {
				"type": "object",
				"required": ["color"],
				"properties": {
					"color": { "$ref": "#/components/schemas/WorkspaceAccentColor" }
				}
			},
			"SetWorkspaceNameRequest": {
				"type": "object",
				"required": ["name"],
				"properties": {
					"name": { "$ref": "#/components/schemas/WorkspaceName" }
				}
			},
			"WorkspaceInvitation": {
				"type": "object",
				"required": [
					"invitation_id",
					"created_at",
					"status",
					"jid",
					"pre_assigned_role",
					"contact",
					"accept_token_expires_at"
				],
				"properties": {
					"accept_token_expires_at": {
						"$ref": "#/components/schemas/DateTime"
					},
					"contact": { "$ref": "#/components/schemas/InvitationContact" },
					"created_at": { "$ref": "#/components/schemas/DateTime" },
					"invitation_id": { "$ref": "#/components/schemas/InvitationId" },
					"jid": { "$ref": "#/components/schemas/JID" },
					"pre_assigned_role": { "$ref": "#/components/schemas/MemberRole" },
					"status": { "$ref": "#/components/schemas/InvitationStatus" }
				}
			},
			"JID": {
				"summary": "A bare JID, as defined by [RFC 6120, section 2.1](https://www.rfc-editor.org/rfc/rfc6120#section-2.1).",
				"type": "string",
				"format": "jid",
				"example": "remi@prose.org"
			},
			"MemberRole": {
				"summary": "A member's role.",
				"type": "string",
				"enum": ["MEMBER", "ADMIN"]
			},
			"InvitationStatus": {
				"summary": "The status of an invitation.",
				"type": "string",
				"enum": ["TO_SEND", "SENT", "SEND_FAILED"],
				"example": "SENT"
			},
			"InvitationId": {
				"summary": "The unique identifier of an invitation.",
				"type": "integer",
				"format": "int32",
				"example": 42
			},
			"InvitationContact": {
				"oneOf": [{ "$ref": "#/components/schemas/InvitationContactEmail" }],
				"discriminator": {
					"propertyName": "channel"
				}
			},
			"InvitationContactEmail": {
				"type": "object",
				"required": ["channel", "email_address"],
				"properties": {
					"channel": { "$ref": "#/components/schemas/InvitationChannel" },
					"email_address": {
						"type": "string",
						"format": "email",
						"summary": "An email address.",
						"example": "remi@example.org"
					}
				}
			},
			"InvitationChannel": {
				"type": "string",
				"enum": ["email"],
				"summary": "The channel used to invite someone.\n\nFor now only email is supported, but we could extend it to SMS for example."
			},
			"Username": {
				"type": "string",
				"summary": "The local part of a JID, as defined by [RFC 6120, section 2.1](https://www.rfc-editor.org/rfc/rfc6120#section-2.1).",
				"example": "remi.bardon"
			},
			"Nickname": {
				"type": "string",
				"summary": "A vCard `NICKNAME` parameter, as defined in [RFC 6350, section 6.2.3](https://datatracker.ietf.org/doc/html/rfc6350#section-6.2.3).",
				"example": "Rémi B."
			},
			"WorkspaceName": {
				"type": "string",
				"summary": "The name of a Prose workspace.",
				"example": "Crisp"
			},
			"WorkspaceAccentColor": {
				"type": "string",
				"example": "#4233BE",
				"nullable": true
			},
			"Password": {
				"type": "string",
				"format": "password",
				"example": "HsV>dFx^P[m!jM+4W9wf5k:_t{8pSQ*?"
			},
			"DateTime": {
				"type": "string",
				"format": "date-time"
			},
			"Avatar": {
				"type": "string",
				"summary": "A base64-encoded avatar (PNG).",
				"example": "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"
			},
			"OnlineStatus": {
				"title": "Online status",
				"description": "Whether or not the member is connected.",
				"type": "boolean"
			},
			"LoginResponse": {
				"type": "object",
				"required": ["token"],
				"properties": {
					"token": {
						"title": "An authentication token",
						"summary": "summary",
						"description": "description",
						"type": "string",
						"format": "jwt",
						"example": "eyJhbGciOiJIUzI1NiJ9.eyJqaWQiOiJleGFtcGxlQHByb3NlLm9yZy5sb2NhbCJ9.y88lyu9q0dFx9zYxllJo3XUtNnyc3Z_ad3w1hsfTJQ0"
					}
				}
			},
			"Member": {
				"type": "object",
				"required": ["jid", "role"],
				"properties": {
					"jid": { "$ref": "#/components/schemas/JID" },
					"role": { "$ref": "#/components/schemas/MemberRole" }
				}
			},
			"DnsRecordStatus": {
				"type": "string",
				"enum": ["CHECKING", "VALID", "PARTIALLY_VALID", "INVALID"]
			},
			"DnsRecordCheckResult": {
				"type": "object",
				"required": ["description", "status"],
				"properties": {
					"description": { "type": "string" },
					"status": { "$ref": "#/components/schemas/DnsRecordStatus" }
				},
				"example": {
					"description": "IPv4 record for xmpp.crisp.chat",
					"status": "VALID"
				}
			},
			"PortReachabilityStatus": {
				"type": "string",
				"enum": ["CHECKING", "OPEN", "CLOSED"]
			},
			"PortReachabilityCheckResult": {
				"type": "object",
				"required": ["description", "status"],
				"properties": {
					"description": { "type": "string" },
					"status": { "$ref": "#/components/schemas/PortReachabilityStatus" }
				},
				"example": {
					"description": "Client-to-server port at TCP 5222",
					"status": "OPEN"
				}
			},
			"IpConnectivityStatus": {
				"type": "string",
				"enum": ["SUCCESS", "FAILURE", "CHECKING"]
			},
			"IpConnectivityCheckResult": {
				"type": "object",
				"required": ["description", "status"],
				"properties": {
					"description": { "type": "string" },
					"status": { "$ref": "#/components/schemas/IpConnectivityStatus" }
				},
				"example": {
					"description": "Client-to-server connectivity over IPv4",
					"status": "SUCCESS"
				}
			},
			"DnsRecordType": {
				"type": "string",
				"enum": ["A", "AAAA", "SRV"]
			},
			"Int32": {
				"type": "integer",
				"format": "int32",
				"minimum": 0
			},
			"DnsRecord": {
				"Any": {
					"oneOf": [
						{ "$ref": "#/components/schemas/DnsRecord/A" },
						{ "$ref": "#/components/schemas/DnsRecord/AAAA" },
						{ "$ref": "#/components/schemas/DnsRecord/SRV" }
					],
					"discriminator": {
						"propertyName": "type"
					}
				},
				"A": {
					"type": "object",
					"required": ["hostname", "type", "ttl", "value"],
					"properties": {
						"hostname": { "type": "string" },
						"type": { "$ref": "#/components/schemas/DnsRecordType" },
						"ttl": { "$ref": "#/components/schemas/Int32" },
						"value": { "type": "string" }
					},
					"example": {
						"hostname": "xmpp.crisp.chat",
						"type": "A",
						"ttl": 600,
						"value": "90.105.205.180"
					}
				},
				"AAAA": {
					"type": "object",
					"required": ["hostname", "type", "ttl", "value"],
					"properties": {
						"hostname": { "type": "string" },
						"type": { "$ref": "#/components/schemas/DnsRecordType" },
						"ttl": { "$ref": "#/components/schemas/Int32" },
						"value": { "type": "string" }
					},
					"example": {
						"hostname": "xmpp.crisp.chat",
						"type": "AAAA",
						"ttl": 600,
						"value": "2a01:cb05:899c:c200::1"
					}
				},
				"SRV": {
					"type": "object",
					"required": [
						"hostname",
						"type",
						"ttl",
						"priority",
						"weight",
						"port",
						"target"
					],
					"properties": {
						"hostname": { "type": "string" },
						"type": { "$ref": "#/components/schemas/DnsRecordType" },
						"ttl": { "$ref": "#/components/schemas/Int32" },
						"priority": { "$ref": "#/components/schemas/Int32" },
						"weight": { "$ref": "#/components/schemas/Int32" },
						"port": { "$ref": "#/components/schemas/Int32" },
						"target": { "type": "string" }
					},
					"example": {
						"hostname": "crisp.chat",
						"type": "SRV",
						"ttl": 3600,
						"priority": 0,
						"weight": 5,
						"port": 5222,
						"target": "xmpp.crisp.chat."
					}
				}
			},
			"GetDnsRecordsResponse": {
				"type": "object",
				"required": ["steps"],
				"properties": {
					"steps": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DnsSetupStep"
						}
					}
				},
				"example": {
					"steps": [
						{
							"purpose": "specify your server IP address",
							"records": [
								{
									"hostname": "xmpp.crisp.chat",
									"type": "A",
									"ttl": 600,
									"value": "90.105.205.180",
									"string_repr": "xmpp.crisp.chat 600 IN A 90.105.205.180"
								},
								{
									"hostname": "xmpp.crisp.chat",
									"type": "AAAA",
									"ttl": 600,
									"value": "2a01:cb05:899c:c200::1",
									"string_repr": "xmpp.crisp.chat 600 IN AAAA 2a01:cb05:899c:c200::1"
								}
							]
						},
						{
							"purpose": "let clients connect to your server",
							"records": [
								{
									"hostname": "crisp.chat",
									"type": "SRV",
									"ttl": 3600,
									"priority": 0,
									"weight": 5,
									"port": 5222,
									"target": "xmpp.crisp.chat.",
									"string_repr": "crisp.chat 3600 IN SRV 0 5 5222 xmpp.crisp.chat."
								}
							]
						},
						{
							"purpose": "let servers connect to your server",
							"records": [
								{
									"hostname": "crisp.chat",
									"type": "SRV",
									"ttl": 3600,
									"priority": 0,
									"weight": 5,
									"port": 5269,
									"target": "xmpp.crisp.chat.",
									"string_repr": "crisp.chat 3600 IN SRV 0 5 5269 xmpp.crisp.chat."
								}
							]
						}
					]
				}
			},
			"DnsSetupStep": {
				"required": ["purpose", "records"],
				"properties": {
					"purpose": {
						"description": "The purpose of this step. Note that it always starts with a lowercase letter.",
						"type": "string",
						"example": "let clients connect to your server"
					},
					"records": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DnsRecordWithStringRepr"
						}
					}
				}
			},
			"DnsRecordWithStringRepr": {
				"allOf": [
					{
						"type": "object",
						"required": ["string_repr"],
						"properties": {
							"string_repr": { "type": "string" }
						}
					},
					{
						"$ref": "#/components/schemas/DnsRecord/Any"
					}
				]
			},
			"sse-events": {
				"enriched-member": {
					"summary": "A Server-Sent Event containing enriched data about a member.",
					"type": "object",
					"required": ["event", "id", "data"],
					"properties": {
						"event": {
							"type": "string",
							"example": "enriched-member"
						},
						"id": { "$ref": "#/components/schemas/JID" },
						"data": { "$ref": "#/components/schemas/EnrichedMember" }
					}
				},
				"dns-record-check-result": {
					"summary": "A Server-Sent Event containing the result of a DNS record check.",
					"type": "object",
					"required": ["event", "id", "data"],
					"properties": {
						"event": {
							"type": "string",
							"example": "dns-record-check-result"
						},
						"id": {
							"$ref": "#/components/schemas/sse-event-ids/DnsRecordCheckId"
						},
						"data": { "$ref": "#/components/schemas/DnsRecordCheckResult" }
					}
				},
				"port-reachability-check-result": {
					"summary": "A Server-Sent Event containing the result of a port reachability check.",
					"type": "object",
					"required": ["event", "id", "data"],
					"properties": {
						"event": {
							"type": "string",
							"example": "port-reachability-check-result"
						},
						"id": {
							"$ref": "#/components/schemas/sse-event-ids/PortReachabilityCheckId"
						},
						"data": {
							"$ref": "#/components/schemas/PortReachabilityCheckResult"
						}
					}
				},
				"ip-connectivity-check-result": {
					"summary": "A Server-Sent Event containing the result of an IP connectivity check.",
					"type": "object",
					"required": ["event", "id", "data"],
					"properties": {
						"event": {
							"type": "string",
							"example": "ip-connectivity-check-result"
						},
						"id": {
							"$ref": "#/components/schemas/sse-event-ids/IpConnectivityCheckId"
						},
						"data": { "$ref": "#/components/schemas/IpConnectivityCheckResult" }
					}
				},
				"end": {
					"summary": "A Server-Sent Event indicating all events have been sent (the connection will be closed).",
					"type": "object",
					"required": ["event", "id", "comment"],
					"properties": {
						"event": {
							"type": "string",
							"example": "end"
						},
						"id": {
							"type": "string",
							"example": "end"
						},
						"comment": {
							"type": "string",
							"example": "End of stream"
						}
					}
				}
			},
			"sse-event-ids": {
				"DnsRecordCheckId": {
					"type": "string",
					"enum": ["IPv4", "IPv6", "SRV-c2s", "SRV-s2s"]
				},
				"PortReachabilityCheckId": {
					"type": "string",
					"enum": ["TCP-c2s", "TCP-s2s", "TCP-HTTPS"]
				},
				"IpConnectivityCheckId": {
					"type": "string",
					"enum": ["IPv4-c2s", "IPv6-c2s", "IPv4-s2s", "IPv6-s2s"]
				}
			}
		},
		"headers": {
			"Location": {
				"description": "URL to the created resource. See [`Location` on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Location).",
				"schema": {
					"type": "string",
					"format": "uri"
				},
				"example": "/v1/invitations/42"
			},
			"WWW-Authenticate": {
				"description": "Standard `WWW-Authenticate` header. See [`WWW-Authenticate` on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/WWW-Authenticate).",
				"schema": {
					"type": "string",
					"format": "www-authenticate"
				},
				"example": "Bearer realm=\"Admin only area\", charset=\"UTF-8\""
			},
			"PaginationCurrentPage": {
				"description": "Current pagination page (non standard header). Starts at `1`.",
				"schema": {
					"type": "integer",
					"format": "int64",
					"minimum": 1
				},
				"example": 1
			},
			"PaginationPageSize": {
				"description": "Size of a pagination page (non standard header). Starts at `1`.",
				"schema": {
					"type": "integer",
					"format": "int64",
					"minimum": 1,
					"default": 20
				},
				"example": 20
			},
			"PaginationPageCount": {
				"description": "Total number of pagination pages (non standard header). Warning: `Page-Count` will be `0` with `Current-Page` at `1` if there are no result.",
				"schema": {
					"type": "integer",
					"format": "int64",
					"minimum": 0
				},
				"example": 3
			},
			"PaginationItemCount": {
				"description": "Total number of items (non standard header).",
				"schema": {
					"type": "integer",
					"format": "int64",
					"minimum": 0
				},
				"example": 42
			}
		},
		"securitySchemes": {
			"BasicAuth": {
				"type": "http",
				"scheme": "basic"
			},
			"BearerAuth": {
				"type": "http",
				"scheme": "bearer"
			}
		},
		"responses": {
			"NoContent": {
				"description": "Success"
			},
			"WorkspaceAlreadyInitialized": {
				"description": "Workspace already initialized",
				"content": {
					"application/json": {
						"schema": { "$ref": "#/components/schemas/Error" },
						"example": {
							"reason": "workspace_already_initialized"
						}
					}
				}
			},
			"WorkspaceNotInitialized": {
				"description": "Workspace not initialized",
				"content": {
					"application/json": {
						"schema": { "$ref": "#/components/schemas/Error" },
						"example": {
							"reason": "workspace_not_initialized"
						}
					}
				}
			},
			"ServerConfigAlreadyInitialized": {
				"description": "XMPP server already initialized",
				"content": {
					"application/json": {
						"schema": { "$ref": "#/components/schemas/Error" },
						"example": {
							"reason": "server_config_already_initialized"
						}
					}
				}
			},
			"ServerConfigNotInitialized": {
				"description": "XMPP server not initialized",
				"content": {
					"application/json": {
						"schema": { "$ref": "#/components/schemas/Error" },
						"example": {
							"reason": "server_config_not_initialized"
						}
					}
				}
			},
			"PodAddressNotInitialized": {
				"description": "Pod address not initialized",
				"content": {
					"application/json": {
						"schema": { "$ref": "#/components/schemas/Error" },
						"example": {
							"reason": "pod_address_not_initialized"
						}
					}
				}
			},
			"FirstAccountAlreadyCreated": {
				"description": "First account already created",
				"content": {
					"application/json": {
						"schema": { "$ref": "#/components/schemas/Error" },
						"example": {
							"reason": "first_account_already_created"
						}
					}
				}
			},
			"Unauthorized": {
				"description": "Unauthorized",
				"content": {
					"application/json": {
						"schema": { "$ref": "#/components/schemas/Error" },
						"example": {
							"reason": "unauthorized"
						}
					}
				},
				"headers": {
					"WWW-Authenticate": {
						"$ref": "#/components/headers/WWW-Authenticate"
					}
				}
			},
			"Forbidden": {
				"description": "Forbidden",
				"content": {
					"application/json": {
						"schema": { "$ref": "#/components/schemas/Error" },
						"example": {
							"reason": "forbidden"
						}
					}
				}
			},
			"NotFound": {
				"description": "Object not found",
				"content": {
					"application/json": {
						"schema": { "$ref": "#/components/schemas/Error" },
						"example": {
							"reason": "not_found"
						}
					}
				}
			},
			"Gone": {
				"description": "Object does not exist",
				"content": {
					"application/json": {
						"schema": { "$ref": "#/components/schemas/Error" },
						"example": {
							"reason": "not_found"
						}
					}
				}
			},
			"GetServerConfigAllResponses": {
				"200": {
					"description": "Success",
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ServerConfig" }
						}
					}
				},
				"400": { "$ref": "#/components/responses/ServerConfigNotInitialized" },
				"401": { "$ref": "#/components/responses/Unauthorized" },
				"403": { "$ref": "#/components/responses/Forbidden" }
			}
		},
		"parameters": {
			"InvitationId": {
				"description": "Unique identifier of a workspace invitation",
				"name": "invitationId",
				"in": "path",
				"schema": { "$ref": "#/components/schemas/InvitationId" },
				"required": true
			},
			"InvitationIdOrToken": {
				"description": "Unique identifier of a workspace invitation",
				"name": "invitationIdOrToken",
				"in": "path",
				"schema": {
					"oneOf": [
						{ "$ref": "#/components/schemas/InvitationId" },
						{ "$ref": "#/components/schemas/InvitationToken" }
					]
				},
				"required": true
			},
			"InvitationToken": {
				"description": "Invitation accept or reject token",
				"in": "path",
				"name": "token",
				"schema": { "$ref": "#/components/schemas/InvitationToken" },
				"required": true
			},
			"InvitationAcceptToken": {
				"description": "Invitation accept token",
				"in": "path",
				"name": "token",
				"schema": { "$ref": "#/components/schemas/InvitationAcceptToken" },
				"required": true
			},
			"InvitationRejectToken": {
				"description": "Invitation reject token",
				"in": "path",
				"name": "token",
				"schema": { "$ref": "#/components/schemas/InvitationRejectToken" },
				"required": true
			},
			"PageNumber": {
				"in": "query",
				"name": "page_number",
				"schema": {
					"type": "integer",
					"format": "int64",
					"default": 1,
					"example": 2
				}
			},
			"PageSize": {
				"in": "query",
				"name": "page_size",
				"schema": {
					"type": "integer",
					"format": "int64",
					"default": 20,
					"example": 50
				}
			},
			"Until": {
				"in": "query",
				"name": "until",
				"schema": { "$ref": "#/components/schemas/DateTime" }
			},
			"RetryInterval": {
				"description": "Time to wait between retries (when requesting Server-Sent Events). It must be between 1 second and 1 minute (inclusive), and will default to 5 seconds is unspecified. It does not mean checks will be retried exactly every `interval` but rather the API will wait `interval` between a failure and the start of another check.",
				"in": "query",
				"name": "interval",
				"schema": { "$ref": "#/components/schemas/DurationTimeLike" },
				"example": "PT5S"
			},
			"MemberId": {
				"name": "memberId",
				"in": "path",
				"required": true,
				"schema": { "$ref": "#/components/schemas/JID" }
			},
			"XepId": {
				"description": "Unique identifier of an [XMPP extension (XEP)](https://xmpp.org/extensions/).",
				"name": "xepId",
				"in": "path",
				"required": true,
				"schema": {
					"type": "string"
				},
				"example": "XEP-0045"
			},
			"ReactionId": {
				"name": "reactionId",
				"in": "path",
				"required": true,
				"schema": {
					"type": "string"
				}
			}
		}
	}
}
