paths:
  is_server_initialized:
    tags: [Init]
    summary: Is the XMPP server initialized?
    description: Query whether or not the XMPP server has already been initialized.
    operationId: is_server_initialized
    security: []
    parameters:
      - in: header
        name: If-Match
        schema:
          type: string
          const: "*"
        required: true
    responses:
      "204": { description: XMPP server already initialized }
      "412": { description: XMPP server not initialized }
      "428": { $ref: "../shared.yaml#/components/responses/PreconditionRequired" }
  init_server_config:
    tags: [Init]
    summary: Initialize the XMPP server
    description: Initializes the XMPP server and returns its default configuration.
    operationId: init_server_config
    security: []
    requestBody:
      required: true
      content:
        application/json:
          schema: { $ref: "#/components/schemas/InitServerConfigRequest" }
    responses:
      "201":
        description: Created
        content:
          application/json:
            schema: { $ref: "#/components/schemas/ServerConfig" }
        headers:
          Location:
            $ref: "../shared.yaml#/components/headers/Location"
            example: /v1/server/config
      "409": { $ref: "#/components/responses/ServerConfigAlreadyInitialized" }
  get_server_config:
    tags: ["Server / Configuration"]
    summary: Get server config
    description: Get the current configuration of the XMPP server.
    operationId: get_server_config
    security:
      - {}
      - BearerAuth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              oneOf:
                - { $ref: "#/components/schemas/PublicServerConfig" }
                - { $ref: "#/components/schemas/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_file_upload_allowed:
    tags: ["Server / Configuration"]
    summary: Change file upload allowed
    description: Activate or deactivate file upload and sharing.
    operationId: set_file_upload_allowed
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            { $ref: "#/components/schemas/PrivateServerConfig/properties/file_upload_allowed" }
    responses: { $ref: "#/paths/get_file_upload_allowed/responses" }
  get_file_upload_allowed:
    tags: ["Server / Configuration"]
    summary: Get file upload allowed
    description: Get whether or not file upload and sharing is enabled.
    operationId: get_file_upload_allowed
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              { $ref: "#/components/schemas/PrivateServerConfig/properties/file_upload_allowed" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_file_upload_allowed:
    tags: ["Server / Configuration"]
    summary: Reset file upload allowed
    description: Reset whether or not file upload and sharing is enabled and return the default value.
    operationId: reset_file_upload_allowed
    security:
      - BearerAuth: []
    responses: { $ref: "#/paths/get_file_upload_allowed/responses" }
  set_file_storage_retention:
    tags: ["Server / Configuration"]
    summary: Change uploaded files retention
    description: Change the retention of uploaded files.
    operationId: set_file_storage_retention
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            { $ref: "#/components/schemas/PrivateServerConfig/properties/file_storage_retention" }
    responses: { $ref: "#/paths/get_file_storage_retention/responses" }
  get_file_storage_retention:
    tags: ["Server / Configuration"]
    summary: Get uploaded files retention
    description: Get the retention of uploaded files.
    operationId: get_file_storage_retention
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              { $ref: "#/components/schemas/PrivateServerConfig/properties/file_storage_retention" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_file_storage_retention:
    tags: ["Server / Configuration"]
    summary: Reset uploaded files retention
    description: Reset the retention of uploaded files and return the default value.
    operationId: reset_file_storage_retention
    security:
      - BearerAuth: []
    responses: { $ref: "#/paths/get_file_storage_retention/responses" }
  set_file_storage_encryption_scheme:
    tags: ["Server / Configuration"]
    summary: Change file storage encryption scheme
    description: Change the file storage encryption scheme.
    operationId: set_file_storage_encryption_scheme
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            {
              $ref: "#/components/schemas/PrivateServerConfig/properties/file_storage_encryption_scheme",
            }
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrivateServerConfig/properties/file_storage_encryption_scheme"
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_messaging_config:
    tags: ["Server / Configuration"]
    summary: Reset 'Messaging' configuration
    description: Reset the 'Messaging' configuration to its default value.
    operationId: reset_messaging_config
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_message_archive_retention:
    tags: ["Server / Configuration"]
    summary: Change message archive retention
    description: Update message archive retention.
    operationId: set_message_archive_retention
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            {
              $ref: "#/components/schemas/PrivateServerConfig/properties/message_archive_retention",
            }
    responses: { $ref: "#/paths/get_message_archive_retention/responses" }
  get_message_archive_retention:
    tags: ["Server / Configuration"]
    summary: Get message archive retention
    description: Get the message archive retention.
    operationId: get_message_archive_retention
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrivateServerConfig/properties/message_archive_retention"
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_message_archive_retention:
    tags: ["Server / Configuration"]
    summary: Reset message archive retention
    description: Reset the message archive retention and return the default value.
    operationId: reset_message_archive_retention
    security:
      - BearerAuth: []
    responses: { $ref: "#/paths/get_message_archive_retention/responses" }
  reset_files_config:
    tags: ["Server / Configuration"]
    summary: Reset 'Files' configuration
    description: Reset the 'Files' configuration to its default value.
    operationId: reset_files_config
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_message_archive_enabled:
    tags: ["Server / Configuration"]
    summary: Set message archiving enabled
    description: Activate or deactivate message archiving.
    operationId: set_message_archive_enabled
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            { $ref: "#/components/schemas/PrivateServerConfig/properties/message_archive_enabled" }
    responses: { $ref: "#/paths/get_message_archive_enabled/responses" }
  get_message_archive_enabled:
    tags: ["Server / Configuration"]
    summary: Get message archiving enabled
    description: Get whether or not message archiving is enabled.
    operationId: get_message_archive_enabled
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              {
                $ref: "#/components/schemas/PrivateServerConfig/properties/message_archive_enabled",
              }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_message_archive_enabled:
    tags: ["Server / Configuration"]
    summary: Reset message archiving enabled
    description: Reset whether or not message archiving is enabled and return the default value.
    operationId: reset_message_archive_enabled
    security:
      - BearerAuth: []
    responses: { $ref: "#/paths/get_message_archive_enabled/responses" }
  reset_push_notifications_config:
    tags: ["Server / Configuration"]
    summary: Reset 'Push notifications' configuration
    description: Reset the 'Push notifications' configuration to its default value.
    operationId: reset_push_notifications_config
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_push_notification_with_body:
    tags: ["Server / Configuration"]
    summary: Change 'Push notification with body'
    description: |
      Whether or not to send the real message body to the remote pubsub node.
      Without end-to-end encryption, enabling this may expose your message
      contents to your client developers and OS vendor. Not recommended.
    operationId: set_push_notification_with_body
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PrivateServerConfig/properties/push_notification_with_body"
    responses: { $ref: "#/paths/get_push_notification_with_body/responses" }
  get_push_notification_with_body:
    tags: ["Server / Configuration"]
    summary: Get 'Push notification with body'
    description: |
      Whether or not to send the real message body to the remote pubsub node.
    operationId: get_push_notification_with_body
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrivateServerConfig/properties/push_notification_with_body"
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_push_notification_with_body:
    tags: ["Server / Configuration"]
    summary: Reset 'Push notification with body'
    description: Reset 'Push notification with body' and return the default value.
    operationId: reset_push_notification_with_body
    security:
      - BearerAuth: []
    responses: { $ref: "#/paths/get_push_notification_with_body/responses" }
  set_push_notification_with_sender:
    tags: ["Server / Configuration"]
    summary: Change 'Push notification with sender'
    description: |
      Whether or not to send the real message sender to the remote pubsub node.
      Enabling this may expose your contacts to your client developers and OS vendor.
      Not recommended.
    operationId: set_push_notification_with_sender
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PrivateServerConfig/properties/push_notification_with_sender"
    responses: { $ref: "#/paths/get_push_notification_with_sender/responses" }
  get_push_notification_with_sender:
    tags: ["Server / Configuration"]
    summary: Get 'Push notification with sender'
    description: |
      Whether or not to send the real message sender to the remote pubsub node.
    operationId: get_push_notification_with_sender
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrivateServerConfig/properties/push_notification_with_sender"
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_push_notification_with_sender:
    tags: ["Server / Configuration"]
    summary: Reset 'Push notification with sender'
    description: Reset 'Push notification with sender' and return the default value.
    operationId: reset_push_notification_with_sender
    security:
      - BearerAuth: []
    responses: { $ref: "#/paths/get_push_notification_with_sender/responses" }
  reset_network_encryption_config:
    tags: ["Server / Configuration"]
    summary: Reset 'Network encryption' configuration
    description: Reset the 'Network encryption' configuration to its default value.
    operationId: reset_network_encryption_config
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_tls_profile:
    tags: ["Server / Configuration"]
    summary: Change 'TLS profile'
    description: |
      The [TLS](https://fr.wikipedia.org/wiki/Transport_Layer_Security) profile to use
      (see [Security/Server Side TLS - MozillaWiki](https://wiki.mozilla.org/Security/Server_Side_TLS)
      for more explanation).
    operationId: set_tls_profile
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema: { $ref: "#/components/schemas/PrivateServerConfig/properties/tls_profile" }
    responses: { $ref: "#/paths/get_tls_profile/responses" }
  get_tls_profile:
    tags: ["Server / Configuration"]
    summary: Get 'TLS profile'
    description: |
      The [TLS](https://fr.wikipedia.org/wiki/Transport_Layer_Security) profile to use
      (see [Security/Server Side TLS - MozillaWiki](https://wiki.mozilla.org/Security/Server_Side_TLS)
      for more explanation).
    operationId: get_tls_profile
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema: { $ref: "#/components/schemas/PrivateServerConfig/properties/tls_profile" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_tls_profile:
    tags: ["Server / Configuration"]
    summary: Reset 'TLS profile'
    description: Reset 'TLS profile' and return the default value.
    operationId: reset_tls_profile
    security:
      - BearerAuth: []
    responses: { $ref: "#/paths/get_tls_profile/responses" }
  reset_server_federation_config:
    tags: ["Server / Configuration"]
    summary: Reset 'Server federation' configuration
    description: Reset the 'Server federation' configuration to its default value.
    operationId: reset_server_federation_config
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_federation_enabled:
    tags: ["Server / Configuration"]
    summary: Change 'Federation enabled'
    description: |
      Allowing other servers to connect will enable federation.
      This lets users from other Prose workspaces connect with users in this workspace.
      For more safety, whitelist friendly servers.
    operationId: set_federation_enabled
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema: { $ref: "#/components/schemas/PrivateServerConfig/properties/federation_enabled" }
    responses: { $ref: "#/paths/get_federation_enabled/responses" }
  get_federation_enabled:
    tags: ["Server / Configuration"]
    summary: Get 'Federation enabled'
    description: |
      Allowing other servers to connect will enable federation.
      This lets users from other Prose workspaces connect with users in this workspace.
      For more safety, whitelist friendly servers.
    operationId: get_federation_enabled
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              { $ref: "#/components/schemas/PrivateServerConfig/properties/federation_enabled" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_federation_enabled:
    tags: ["Server / Configuration"]
    summary: Reset 'Federation enabled'
    description: Reset 'Federation enabled' and return the default value.
    operationId: reset_federation_enabled
    security:
      - BearerAuth: []
    responses: { $ref: "#/paths/get_federation_enabled/responses" }
  set_federation_whitelist_enabled:
    tags: ["Server / Configuration"]
    summary: Change 'Federation whitelist enabled'
    description: |
      Whether or not to enable server whitelisting. Caution: If a whitelist is set but disabled,
      your server will still federate with the entire XMPP network.
    operationId: set_federation_whitelist_enabled
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PrivateServerConfig/properties/federation_whitelist_enabled"
    responses: { $ref: "#/paths/get_federation_whitelist_enabled/responses" }
  get_federation_whitelist_enabled:
    tags: ["Server / Configuration"]
    summary: Get 'Federation whitelist enabled'
    description: |
      Whether or not to enable server whitelisting. Caution: If a whitelist is set but disabled,
      your server will still federate with the entire XMPP network.
    operationId: get_federation_whitelist_enabled
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrivateServerConfig/properties/federation_whitelist_enabled"
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_federation_whitelist_enabled:
    tags: ["Server / Configuration"]
    summary: Reset 'Federation whitelist enabled'
    description: Reset 'Federation whitelist enabled' and return the default value.
    operationId: reset_federation_whitelist_enabled
    security:
      - BearerAuth: []
    responses: { $ref: "#/paths/get_federation_whitelist_enabled/responses" }
  set_federation_friendly_servers:
    tags: ["Server / Configuration"]
    summary: Change 'Friendly servers'
    description: |
      If a whitelist is defined, then other servers will not be allowed to connect to this server,
      except whitelisted ones. It is recommended to whitelist servers you typically work with,
      ie. other teams.
    operationId: set_federation_friendly_servers
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PrivateServerConfig/properties/federation_friendly_servers"
    responses: { $ref: "#/paths/get_federation_friendly_servers/responses" }
  get_federation_friendly_servers:
    tags: ["Server / Configuration"]
    summary: Get 'Friendly servers'
    description: |
      If a whitelist is defined, then other servers will not be allowed to connect to this server,
      except whitelisted ones. It is recommended to whitelist servers you typically work with,
      ie. other teams.
    operationId: get_federation_friendly_servers
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrivateServerConfig/properties/federation_friendly_servers"
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_federation_friendly_servers:
    tags: ["Server / Configuration"]
    summary: Reset 'Friendly servers'
    description: Reset 'Friendly servers' and return the default value.
    operationId: reset_federation_friendly_servers
    security:
      - BearerAuth: []
    responses: { $ref: "#/paths/get_federation_friendly_servers/responses" }
components:
  schemas:
    ServerConfig:
      type: object
      allOf:
        - { $ref: "#/components/schemas/PublicServerConfig" }
        - { $ref: "#/components/schemas/PrivateServerConfig" }
    PublicServerConfig:
      type: object
      required:
        - domain
      properties:
        domain:
          title: Domain
          description: |
            Domain of your XMPP server. This will be the domain part of
            user JIDs (`<name>@<domain>`) therefore it cannot be changed.
          type: string
          format: hostname
          example: crisp.chat
    PrivateServerConfig:
      type: object
      required:
        - message_archive_enabled
        - message_archive_retention
        - file_upload_allowed
        - file_storage_encryption_scheme
        - file_storage_retention
        - mfa_required
        - tls_profile
        - federation_enabled
        - federation_whitelist_enabled
        - federation_friendly_servers
        - settings_backup_interval
        - user_data_backup_interval
        - push_notification_with_body
        - push_notification_with_sender
      properties:
        message_archive_enabled:
          title: Message archive enabled
          description: |
            Whether or not to keep messages on the server.

            Server default: `true`.
          type: boolean
          example: true
        message_archive_retention:
          title: Message archive retention
          description: |
            How long to keep messages on the server.

            Server default: `"infinite"`.
          oneOf:
            - $ref: "../shared.yaml#/components/schemas/DurationDateLike"
            - $ref: "../shared.yaml#/components/schemas/DurationInfinite"
          example: infinite
        file_upload_allowed:
          title: File upload allowed
          description: |
            Whether or not to allow file uploads.

            Server default: `true`.
          type: boolean
          example: true
        file_storage_encryption_scheme:
          title: File storage encryption scheme
          description: |
            Server default: `"AES-256"`.
          type: string
          example: AES-256
        file_storage_retention:
          title: File storage retention
          description: |
            How long to keep uploaded files on the server.

            Server default: `"infinite"`.
          oneOf:
            - $ref: "../shared.yaml#/components/schemas/DurationDateLike"
            - $ref: "../shared.yaml#/components/schemas/DurationInfinite"
          example: infinite
        mfa_required:
          title: Require Multi-Factor Authentication
          description: |
            Whether or not [Multi-Factor Authentication
            (MFA)](https://en.wikipedia.org/wiki/Multi-factor_authentication) is
            required for users to log into their account.

            Server default: `true`.
          type: boolean
          example: true
        tls_profile:
          title: TLS profile
          description: |
            The [TLS](https://fr.wikipedia.org/wiki/Transport_Layer_Security) profile to use
            (see [Security/Server Side TLS - MozillaWiki](https://wiki.mozilla.org/Security/Server_Side_TLS)
            for more explanation).

            Server default: `"modern"`.
          type: string
          enum: [modern, intermediate, old]
          example: modern
        federation_enabled:
          description: |
            Whether or not the XMPP server should support interdomain federation.
            For more information, see [RFC 6120, section 13.14](https://www.rfc-editor.org/rfc/rfc6120#section-13.14).

            Server default: `false`.
          type: boolean
          example: false
        federation_whitelist_enabled:
          title: Federation whitelist enabled
          description: |
            Turn on to federate with only a selected list of other XMPP servers.

            Server default: `false`.
          type: boolean
          example: false
        federation_friendly_servers:
          title: Friendly servers (for federation)
          description: |
            List of XMPP servers authorized for server-to-server communications (federation).

            Server default: `[]`.
          type: array
          items:
            type: string
            format: domain-name
            example: prose.org
          example: []
        settings_backup_interval:
          description: |
            Time interval between settings backups.

            Server default: `P1D`.
          type: string
          format: duration
          example: P1D
        user_data_backup_interval:
          description: |
            Time interval between user data backups.

            Server default: `P1W`.
          type: string
          format: duration
          example: P1W
        push_notification_with_body:
          title: Push notifications with body
          description: |
            Whether or not to send the real message body to the remote pubsub node.
            Without end-to-end encryption, enabling this may expose your message
            contents to your client developers and OS vendor. Not recommended.

            Server default: `false`.
          type: boolean
          example: false
        push_notification_with_sender:
          title: Push notifications with sender
          description: |
            Whether or not to send the real message sender to the remote pubsub
            node. Enabling this may expose your contacts to your client
            developers and OS vendor. Not recommended.

            Server default: `false`.
          type: boolean
          example: false
    InitServerConfigRequest:
      type: object
      required: [domain]
      properties:
        domain: { $ref: "#/components/schemas/PublicServerConfig/properties/domain" }
    ServerConfigNotInitialized:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          const: server_config_not_initialized
  responses:
    ServerConfig:
      description: Success
      content:
        application/json:
          schema: { $ref: "#/components/schemas/ServerConfig" }
      headers:
        Content-Location:
          $ref: "../shared.yaml#/components/headers/ContentLocation"
          example: /v1/server/config
    ServerConfigAlreadyInitialized:
      description: XMPP server already initialized
      content:
        application/json:
          schema:
            $ref: "../shared.yaml#/components/schemas/Error"
            properties:
              error:
                const: server_config_already_initialized
          example:
            error: server_config_already_initialized
    ServerConfigNotInitialized:
      description: XMPP server not initialized
      content:
        application/json:
          schema: { $ref: "#/components/schemas/ServerConfigNotInitialized" }
