paths:
  get_prosody_config:
    tags: [Expert]
    summary: Get Prosody config
    description: Get the current Prosody configuration file.
    operationId: get_prosody_config
    security:
      - BasicAuth: []
    responses:
      "200":
        description: Success
        content:
          text/x-lua:
            schema: { $ref: "#/components/schemas/ProsodyConfigFileLua" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_prosody_overrides:
    tags: [Expert]
    summary: Set Prosody overrides
    description: |
      Set overrides to apply when generating Prosody configuration files.
      This can be very dangerous, so make sure you know what you’re doing.

      See [Configuring Prosody – Prosody IM](https://prosody.im/doc/configure).

      Not all keys are supported, see [prose-pod-api/src/prosody-config/src/prosody_config/mod.rs](https://github.com/prose-im/prose-pod-api/blob/master/src/prosody-config/src/prosody_config/mod.rs). If you miss support for a key, tell us and we’ll add it in a future release!
    operationId: set_prosody_overrides
    security:
      - BasicAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema: { $ref: "#/components/schemas/ProsodyOverrides" }
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema: { $ref: "#/components/schemas/ProsodyOverrides" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  get_prosody_overrides:
    tags: [Expert]
    summary: Get Prosody overrides
    description: Get the current overrides applied when generating Prosody configuration files.
    operationId: get_prosody_overrides
    security:
      - BasicAuth: []
    responses:
      "200":
        description: Overrides configured
        content:
          application/json:
            schema: { $ref: "#/components/schemas/ProsodyOverrides" }
      "204": { description: No overrides configured }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_prosody_overrides:
    tags: [Expert]
    summary: Reset Prosody overrides
    description: Reset the current overrides applied when generating Prosody configuration files.
    operationId: reset_prosody_overrides
    security:
      - BasicAuth: []
    responses:
      "204": { description: Success }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_prosody_overrides_raw:
    tags: [Expert]
    summary: Set raw Prosody overrides
    description: |
      Set overrides to apply when generating Prosody configuration files.
      This can be very dangerous, so make sure you know what you’re doing.

      `/v1/server/config/prosody-overrides` supports only a fixed set of configuration keys, so if
      you need to set a non-supported configuration, `/v1/server/config/prosody-overrides-raw` can
      be useful.

      Raw overrides aren’t typed and can really break your Prosody instance. Do not use it unless
      you absolutely know what you are doing.

      Raw overrides will be applied after regular overrides, which mutate the base configuration.
      Raw overrides will be included **as is** at the end of each `VirtualHost` and `Component`,
      taking precedence over existing keys.
    operationId: set_prosody_overrides_raw
    security:
      - BasicAuth: []
    requestBody:
      required: true
      content:
        text/x-lua:
          schema: { $ref: "#/components/schemas/RawProsodyOverrides" }
    responses:
      "200":
        description: Success
        content:
          text/x-lua:
            schema: { $ref: "#/components/schemas/RawProsodyOverrides" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  get_prosody_overrides_raw:
    tags: [Expert]
    summary: Get raw Prosody overrides
    description: Get the current raw overrides applied when generating Prosody configuration files.
    operationId: get_prosody_overrides_raw
    security:
      - BasicAuth: []
    responses:
      "200":
        description: Overrides configured
        content:
          text/x-lua:
            schema: { $ref: "#/components/schemas/RawProsodyOverrides" }
      "204": { description: No overrides configured }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_prosody_overrides_raw:
    tags: [Expert]
    summary: Reset raw Prosody overrides
    description: Reset the current raw overrides applied when generating Prosody configuration files.
    operationId: reset_prosody_overrides_raw
    security:
      - BasicAuth: []
    responses:
      "204": { description: Success }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }

components:
  schemas:
    ProsodyOverrides:
      type: object
      additionalProperties: true
      description: |
        Prosody settings. See [Configuring Prosody – Prosody IM](https://prosody.im/doc/configure).

        Not all keys are supported, see [prose-pod-api/src/prosody-config/src/prosody_config/mod.rs](https://github.com/prose-im/prose-pod-api/blob/master/src/prosody-config/src/prosody_config/mod.rs). If you miss support for a key, tell us and we’ll add it in a future release!
      example:
        c2s_require_encryption: false
    RawProsodyOverrides:
      type: string
      description: |
        Part of a Prosody configuration file
        (see [Configuring Prosody – Prosody IM](https://prosody.im/doc/configure)).
      example: |
        allow_unencrypted_plain_auth = false
        modules_enabled = {
          "rest";
          "http_oauth2";
          "admin_rest";
          "reload_modules";
        }
        reload_modules = { "saslauth" }
    ProsodyConfigFileLua:
      type: string
      example: |
        -- Prose Pod Server
        -- XMPP Server Configuration
        -- /!\ This file has been automatically generated by Prose Pod API.
        -- /!\ Do NOT edit this file manually or your changes will be overridden during the next reload.

        -- Base server configuration
        pidfile = "/var/run/prosody/prosody.pid"

        authentication = "internal_hashed"
        default_storage = "internal"

        log = {
          info = "*console";
          warn = "*console";
          error = "*console";
        }

        -- Network interfaces/ports
        interfaces = { "*" }
        c2s_ports = { 5222 }
        http_ports = { 5280 }
        http_interfaces = { "*" }
        https_ports = {}
        https_interfaces = {}

        -- Modules
        plugin_paths = { "/usr/local/lib/prosody/modules" }
        modules_enabled = {
          "auto_activate_hosts";
          "roster";
          "groups_internal";
          "saslauth";
          "tls";
          "dialback";
          "disco";
          "posix";
          "smacks";
          "private";
          "vcard_legacy";
          "vcard4";
          "version";
          "uptime";
          "time";
          "ping";
          "lastactivity";
          "pep";
          "blocklist";
          "limits";
          "carbons";
          "csi";
          "server_contact_info";
          "websocket";
          "cloud_notify";
          "register";
          "mam";
        }
        modules_disabled = { "s2s" }

        -- Path to SSL key and certificate for all server domains
        ssl = {
          certificate = "/etc/prosody/certs/prose.local.crt";
          key = "/etc/prosody/certs/prose.local.key";
        }

        -- Disable in-band registrations (done through the Prose Pod Dashboard/API)
        allow_registration = false

        -- Mandate highest security levels
        c2s_require_encryption = true

        -- Enforce safety C2S/S2S limits
        c2s_stanza_size_limit = 256 * 1024

        limits = {
          c2s = {
            rate = "50kb/s";
            burst = "2s";
          };
        }

        -- Allow reverse-proxying to WebSocket service over insecure local HTTP
        consider_websocket_secure = true

        -- Specify server administrator
        contact_info = {
          admin = { "mailto:hostmaster@example.org" };
        }

        -- MAM settings
        archive_expires_after = "never"
        default_archive_policy = true
        max_archive_query_results = 100

        -- Enable vCard legacy compatibility layer
        upgrade_legacy_vcards = true

        -- Server hosts and components
        VirtualHost "example.org"
          admins = { "prose-pod-api@admin.prose.local" }

          -- Modules
          modules_enabled = {
            "rest";
            "http_oauth2";
            "admin_rest";
          }

          -- HTTP settings
          http_host = "prose-pod-server"

          -- mod_http_oauth2
          allowed_oauth2_grant_types = {
            "authorization_code";
            "refresh_token";
            "password";
          }
          oauth2_access_token_ttl = 10800
          oauth2_refresh_token_ttl = 0
          oauth2_registration_key = "C9VSarOH2_5PKzJK2O6wQN1vqhYpGbewSEEdmFBymq6xiAW61V9ZJWuWD6TjWcF7VDp6yg7O7KYK_if38ucreET9_Qrq4MqG8uSaCP6Kug81htfygX6v9hRWnynbpGkgQVOy45J1DfDy--ZYFlBoAjVzCTGr8WvCm2-Mfu0CFtI1_JFs19gEaIh9a2XjJkcJoKVnghxQWZkos1bKejIKLRPtqjabOoCqpHKraKfWTLO-FmXeTy8F7itYV3LFcX5f08-xjLR0JpxwyLXI8LlmUk4c70q0CmcjuUVtKCqWficovXg-FIz6B5DmG9P7dVGdSf4GS3-aRj9vwprQXKftBw"

        VirtualHost "admin.prose.local"
          admins = { "prose-pod-api@admin.prose.local" }

          -- Modules
          modules_enabled = {
            "admin_rest";
            "init_admin";
          }

          -- HTTP settings
          http_host = "prose-pod-server-admin"

          -- mod_init_admin
          init_admin_jid = "prose-pod-api@admin.prose.local"
          init_admin_password_env_var_name = "PROSE_BOOTSTRAP__PROSE_POD_API_XMPP_PASSWORD"

        Component "groups.example.org" "muc"
          name = "Chatrooms"

          -- Modules
          modules_enabled = { "muc_mam" }

          -- MAM settings
          max_archive_query_results = 100

          restrict_room_creation = "local"

          -- MUC settings
          muc_log_all_rooms = true
          muc_log_by_default = true
          muc_log_expires_after = "never"

        Component "upload.prose.local" "http_file_share"
          name = "HTTP File Upload"

          -- HTTP settings
          http_file_share_size_limit = 20 * 1024 * 1024
          http_file_share_daily_quota = 250 * 1024 * 1024
          http_file_share_expires_after = -1
          http_host = "localhost"
          http_external_url = "http://localhost:5280"
