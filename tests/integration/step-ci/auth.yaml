version: "1.1"
name: Authentication
config:
  http:
    baseURL: ${{ env.host }}
env:
  $ref: "env.yaml#/env"

# NOTE: Paths are relative to the directory from which `stepci` is ran.
tests:
  basicCheck:
    name: Test changing nickname to see if token works
    steps:
      - $ref: "init.yaml#/components/steps/log_admin_in"
      - name: Set own nickname (tests authentication)
        http:
          method: PUT
          url: /v1/members/${{ env.MEMBER_JIDS.0 }}/nickname
          json: ${{ internet.userName | fake }}
          auth:
            bearer:
              token: ${{ captures.token }}
          check:
            status: /2../
  # See [prose-pod-api#150](https://github.com/prose-im/prose-pod-api/issues/150).
  badJidYieldsUnauthorized:
    name: Logging in with a bad JID yields 401 Unauthorized
    steps:
      - http:
        method: POST
        url: /v1/login
        auth:
          basic:
            username: ""
            password: password
        check:
          status: 401
          headers:
            Content-Type: application/json
          schema:
            $ref: openapi.json#/components/schemas/Error
      - http:
        method: POST
        url: /v1/login
        auth:
          basic:
            username: null
            password: password
        check:
          status: 401
          headers:
            Content-Type: application/json
          schema:
            $ref: openapi.json#/components/schemas/Error
      - http:
        method: POST
        url: /v1/login
        auth:
          basic:
            username: undefined
            password: password
        check:
          status: 401
          headers:
            Content-Type: application/json
          schema:
            $ref: openapi.json#/components/schemas/Error
  # See [prose-pod-api#239](https://github.com/prose-im/prose-pod-api/issues/239).
  badPasswordYieldsUnauthorized:
    name: Logging in with a bad password yields 401 Unauthorized
    steps:
      - http:
          method: POST
          url: /v1/login
          auth:
            basic:
              username: ${{ env.MEMBER_JIDS.0 }}
              password: invalid
          check:
            status: 401
            headers:
              Content-Type: application/json
            schema:
              $ref: openapi.json#/components/schemas/Error
  unknownJidYieldsUnauthorized:
    name: Logging in with an unknown JID yields 401 Unauthorized
    steps:
      - http:
          method: POST
          url: /v1/login
          auth:
            basic:
              username: invalid@${{ env.DOMAIN }}
              password: anything
          check:
            status: 401
            headers:
              Content-Type: application/json
            schema:
              $ref: openapi.json#/components/schemas/Error

components:
  steps:
    log_member_in:
      name: Log member in
      http:
        method: POST
        url: /v1/login
        auth:
          basic:
            # NOTE: Member 8 is a regular member
            username: ${{ env.MEMBER_JIDS.8 }}
            password: ${{ env.MEMBER_PASSWORDS.8 }}
        captures:
          token:
            jsonpath: $.token
        check:
          status: 200
